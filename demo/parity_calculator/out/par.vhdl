--
-- Automatically generated by
-- CONPRO: Hardware Synthesis with an Imperative High Level Multiprocess Approach
--         (c) 2006-2009 by BSSLAB, Dr. Stefan Bosse
--         Version: 2.1 Revision: D100 Genetic size: 2261933
--         Compile date: Thu Aug 13 10:06:37 CEST 2009
--         Compiled by:  sbosse
--         Compiled on:  SunOS sunsil 5.10 Generic_137137-09 sun4u sparc SUNW,Sun-Blade-2500

-- Implementation of Module <Par>.
--
library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.std_logic_arith.all;
use IEEE.std_logic_unsigned.all;
use IEEE.numeric_std.all;
entity MOD_par is
port(
  -- Connections to the outside world
  signal d_RD: out std_logic_vector(63 downto 0);
  signal p_RD: out std_logic;
  signal CLK: in std_logic;
  signal RESET: in std_logic
);
-- ConPro VHDL Library
--
-- ConPro2 library
--
--  Version 2.1.2
--


function min(n,m:natural) return natural is
  begin
    if n < m then return n;
    elsif m < n then return m;
    else return n; end if;
  end;
function max(n,m:natural) return natural is
  begin
    if n > m then return n;
    elsif m > n then return m;
    else return n; end if;
  end;

--
-- multiplier with width_A=width_B=width_RES, type I
--
function mult(A,B: SIGNED) return SIGNED is
  variable BA: SIGNED((A'length+B'length-1) downto 0);
  variable BA_n: SIGNED((A'length-1) downto 0);
  begin
    BA := A * B;
    BA_n := resize(BA,A'length);
    return (BA_n);
  end;
--
-- multiplier with width_A=width_B=width_RES, type L
--
function mult(A,B: STD_LOGIC_VECTOR) return STD_LOGIC_VECTOR is
  variable BA: STD_LOGIC_VECTOR((A'length+B'length-1) downto 0);
  variable BA_n: STD_LOGIC_VECTOR((A'length-1) downto 0);
  begin
    BA := A * B;
    BA_n := BA((A'length-1) downto 0);
    return (BA_n);
  end;
--
-- Overloading of 1 bit adder, type L
--
function "+" (L: std_logic; R:integer) return std_logic is
  begin
    if R = 0 then return L; else return (L xor '1'); end if;
  end "+";

--
-- Type conversion
-- ConPro types! L: logic(std_logic), I:integer(signed), N:natural(integer)
-- Argument width relation: n <= m
--
function Ln_to_Lm(L_n:std_logic_vector;n,m:natural) return std_logic_vector is
  variable fill: std_logic_vector(max(1,m-n-1) downto 0) := (others => '0');
  variable L_m: std_logic_vector(m-1 downto 0);
  begin
    if (m-n) > 1 then L_m := fill & L_n;
    else L_m := '0' & L_n; end if;
    return L_m;
  end;
function Lm_to_Ln(L_m:std_logic_vector;m,n:natural) return std_logic_vector is
  variable L_n: std_logic_vector(n-1 downto 0);
  begin
    L_n := L_m(n-1 downto 0);
    return L_n;
  end;
function Ln_to_Lm_1(L_n:std_logic_vector;n,m:natural) return std_logic_vector is
  variable L_m: std_logic_vector(m-1 downto 0);
  begin
    L_m := '1' & L_n;
    return L_m;
  end;
function In_to_Im(I_n:signed;n,m:natural) return signed is
  variable I_m: signed(m-1 downto 0);
  begin
    I_m := resize(I_n,m);
    return I_m;
  end;
function Im_to_In(I_m:signed;m,n:natural) return signed is
  variable I_n: signed(n-1 downto 0);
  begin
    I_n := resize(I_m,n);
    return I_n;
  end;
function I_to_L(I:signed) return std_logic_vector is
  variable L: std_logic_vector(I'length-1 downto 0);
  begin
    L := std_logic_vector(I);
    return L;
  end;
function In_to_Lm(I_n:signed;n,m:natural) return std_logic_vector is
  variable L_m: std_logic_vector(m-1 downto 0);
  begin
    L_m := std_logic_vector(resize(I_n,m));
    return L_m;
  end;
function Im_to_Ln(I_m:signed;m,n:natural) return std_logic_vector is
  variable L_n: std_logic_vector(n-1 downto 0);
  begin
    L_n := std_logic_vector(resize(I_m,n));
    return L_n;
  end;
function L_to_I(L:std_logic_vector) return signed is
  variable I: signed(L'length-1 downto 0);
  begin
    I := signed(L);
    return I;
  end;
function L_to_B(L:std_logic_vector) return boolean is
  variable comp: std_logic_vector(L'length-1 downto 0) := (others => '1');
  variable B: boolean;
  begin
    B := (L = comp);
    return B;
  end;
function Ln_to_B(L:std_logic_vector;n:natural) return boolean is
  variable comp: std_logic_vector(n-1 downto 0) := (others => '1');
  variable B: boolean;
  begin
    B := (L = comp);
    return B;
  end;
function I_to_B(I:signed) return boolean is
  variable comp: signed(I'length-1 downto 0) := (others => '1');
  variable B: boolean;
  begin
    B := (I = comp);
    return B;
  end;
function In_to_B(I:signed;n:natural) return boolean is
  variable comp: signed(n-1 downto 0) := (others => '1');
  variable B: boolean;
  begin
    B := (I = comp);
    return B;
  end;
function Ln_to_Im(L_n:std_logic_vector;n,m:natural) return signed is
  variable I_m: signed(m-1 downto 0);
  begin
    I_m := resize(signed(L_n),m);
    return I_m;
  end;
function Lm_to_In(L_m:std_logic_vector;m,n:natural) return signed is
  variable I_n: signed(n-1 downto 0);
  begin
    I_n := resize(signed(L_m),n);
    return I_n;
  end;
function N_to_Im(N:natural;m:natural) return signed is
  variable I_m: signed(m-1 downto 0);
  begin
    I_m := to_signed(N,m);
    return I_m;
  end;
function L_to_N(L:std_logic_vector) return integer is
  variable N: integer;
  begin
    N := conv_integer(L);
    return N;
  end;
function L_to_N(L:std_logic) return integer is
  variable N: integer;
  begin
    N := conv_integer(L);
    return N;
  end;
function I_to_N(I:signed) return integer is
  variable N: integer;
  begin
    N := to_integer(I);
    return N;
  end;
end MOD_par;
architecture main of MOD_par is
  -- Process instances
  component par_FUN_parity1
  port(
    -- Connections to external objects, components and the outside world
    signal REG_ARG_FUN_parity1_x_RD: in std_logic_vector(63 downto 0);
    signal REG_RET_FUN_parity1_p_WR: out std_logic;
    signal REG_RET_FUN_parity1_p_WE: out std_logic;
    signal PRO_FUN_parity1_ENABLE: in std_logic;
    signal PRO_FUN_parity1_END: out std_logic;
    signal conpro_system_clk: in std_logic;
    signal conpro_system_reset: in std_logic
  );
  end component;
  component par_FUN_parity2
  port(
    -- Connections to external objects, components and the outside world
    signal REG_ARG_FUN_parity2_x_RD: in std_logic_vector(63 downto 0);
    signal REG_RET_FUN_parity2_p_WR: out std_logic;
    signal REG_RET_FUN_parity2_p_WE: out std_logic;
    signal PRO_FUN_parity2_ENABLE: in std_logic;
    signal PRO_FUN_parity2_END: out std_logic;
    signal conpro_system_clk: in std_logic;
    signal conpro_system_reset: in std_logic
  );
  end component;
  component par_FUN_parity3
  port(
    -- Connections to external objects, components and the outside world
    signal REG_RET_FUN_parity3_p_WR: out std_logic;
    signal REG_RET_FUN_parity3_p_WE: out std_logic;
    signal REG_ARG_FUN_parity3_x_RD: in std_logic_vector(63 downto 0);
    signal PRO_FUN_parity3_ENABLE: in std_logic;
    signal PRO_FUN_parity3_END: out std_logic;
    signal conpro_system_clk: in std_logic;
    signal conpro_system_reset: in std_logic
  );
  end component;
  component par_FUN_parity4
  port(
    -- Connections to external objects, components and the outside world
    signal REG_ARG_FUN_parity4_x_RD: in std_logic_vector(63 downto 0);
    signal REG_RET_FUN_parity4_p_WR: out std_logic;
    signal REG_RET_FUN_parity4_p_WE: out std_logic;
    signal PRO_FUN_parity4_ENABLE: in std_logic;
    signal PRO_FUN_parity4_END: out std_logic;
    signal conpro_system_clk: in std_logic;
    signal conpro_system_reset: in std_logic
  );
  end component;
  component par_FUN_parity5
  port(
    -- Connections to external objects, components and the outside world
    signal REG_ARG_FUN_parity5_x_RD: in std_logic_vector(63 downto 0);
    signal REG_RET_FUN_parity5_p_WR: out std_logic;
    signal REG_RET_FUN_parity5_p_WE: out std_logic;
    signal PRO_FUN_parity5_ENABLE: in std_logic;
    signal PRO_FUN_parity5_END: out std_logic;
    signal conpro_system_clk: in std_logic;
    signal conpro_system_reset: in std_logic
  );
  end component;
  component par_FUN_parity6
  port(
    -- Connections to external objects, components and the outside world
    signal REG_ARG_FUN_parity6_x_RD: in std_logic_vector(63 downto 0);
    signal REG_RET_FUN_parity6_p_WR: out std_logic;
    signal REG_RET_FUN_parity6_p_WE: out std_logic;
    signal PRO_FUN_parity6_ENABLE: in std_logic;
    signal PRO_FUN_parity6_END: out std_logic;
    signal conpro_system_clk: in std_logic;
    signal conpro_system_reset: in std_logic
  );
  end component;
  component par_main
  port(
    -- Connections to external objects, components and the outside world
    signal REG_ARG_FUN_parity5_x_WR: out std_logic_vector(63 downto 0);
    signal REG_ARG_FUN_parity5_x_WE: out std_logic;
    signal REG_d_RD: in std_logic_vector(63 downto 0);
    signal REG_d_WR: out std_logic_vector(63 downto 0);
    signal REG_d_WE: out std_logic;
    signal REG_RET_FUN_parity3_p_RD: in std_logic;
    signal REG_p_WR: out std_logic;
    signal REG_p_WE: out std_logic;
    signal REG_ARG_FUN_parity2_x_WR: out std_logic_vector(63 downto 0);
    signal REG_ARG_FUN_parity2_x_WE: out std_logic;
    signal REG_RET_FUN_parity5_p_RD: in std_logic;
    signal REG_ARG_FUN_parity4_x_WR: out std_logic_vector(63 downto 0);
    signal REG_ARG_FUN_parity4_x_WE: out std_logic;
    signal REG_RET_FUN_parity2_p_RD: in std_logic;
    signal REG_ARG_FUN_parity1_x_WR: out std_logic_vector(63 downto 0);
    signal REG_ARG_FUN_parity1_x_WE: out std_logic;
    signal REG_ARG_FUN_parity6_x_WR: out std_logic_vector(63 downto 0);
    signal REG_ARG_FUN_parity6_x_WE: out std_logic;
    signal REG_RET_FUN_parity4_p_RD: in std_logic;
    signal REG_ARG_FUN_parity3_x_WR: out std_logic_vector(63 downto 0);
    signal REG_ARG_FUN_parity3_x_WE: out std_logic;
    signal REG_RET_FUN_parity1_p_RD: in std_logic;
    signal MUTEX_LOCK_FUN_parity1_INIT: out std_logic;
    signal MUTEX_LOCK_FUN_parity1_LOCK: out std_logic;
    signal MUTEX_LOCK_FUN_parity1_UNLOCK: out std_logic;
    signal MUTEX_LOCK_FUN_parity1_GD: in std_logic;
    signal MUTEX_LOCK_FUN_parity2_INIT: out std_logic;
    signal MUTEX_LOCK_FUN_parity2_LOCK: out std_logic;
    signal MUTEX_LOCK_FUN_parity2_UNLOCK: out std_logic;
    signal MUTEX_LOCK_FUN_parity2_GD: in std_logic;
    signal MUTEX_LOCK_FUN_parity3_INIT: out std_logic;
    signal MUTEX_LOCK_FUN_parity3_LOCK: out std_logic;
    signal MUTEX_LOCK_FUN_parity3_UNLOCK: out std_logic;
    signal MUTEX_LOCK_FUN_parity3_GD: in std_logic;
    signal MUTEX_LOCK_FUN_parity4_INIT: out std_logic;
    signal MUTEX_LOCK_FUN_parity4_LOCK: out std_logic;
    signal MUTEX_LOCK_FUN_parity4_UNLOCK: out std_logic;
    signal MUTEX_LOCK_FUN_parity4_GD: in std_logic;
    signal REG_RET_FUN_parity6_p_RD: in std_logic;
    signal PRO_FUN_parity1_CALL: out std_logic;
    signal PRO_FUN_parity1_GD: in std_logic;
    signal MUTEX_LOCK_FUN_parity5_INIT: out std_logic;
    signal MUTEX_LOCK_FUN_parity5_LOCK: out std_logic;
    signal MUTEX_LOCK_FUN_parity5_UNLOCK: out std_logic;
    signal MUTEX_LOCK_FUN_parity5_GD: in std_logic;
    signal PRO_FUN_parity2_CALL: out std_logic;
    signal PRO_FUN_parity2_GD: in std_logic;
    signal MUTEX_LOCK_FUN_parity6_INIT: out std_logic;
    signal MUTEX_LOCK_FUN_parity6_LOCK: out std_logic;
    signal MUTEX_LOCK_FUN_parity6_UNLOCK: out std_logic;
    signal MUTEX_LOCK_FUN_parity6_GD: in std_logic;
    signal PRO_FUN_parity3_CALL: out std_logic;
    signal PRO_FUN_parity3_GD: in std_logic;
    signal PRO_FUN_parity4_CALL: out std_logic;
    signal PRO_FUN_parity4_GD: in std_logic;
    signal PRO_FUN_parity5_CALL: out std_logic;
    signal PRO_FUN_parity5_GD: in std_logic;
    signal PRO_FUN_parity6_CALL: out std_logic;
    signal PRO_FUN_parity6_GD: in std_logic;
    signal PRO_main_ENABLE: in std_logic;
    signal PRO_main_END: out std_logic;
    signal conpro_system_clk: in std_logic;
    signal conpro_system_reset: in std_logic
  );
  end component;
  -- Local and temporary data objects
  signal REG_ARG_FUN_parity5_x: std_logic_vector(63 downto 0);
  signal REG_ARG_FUN_parity5_x_RD: std_logic_vector(63 downto 0);
  signal REG_ARG_FUN_parity5_x_main_WR: std_logic_vector(63 downto 0);
  signal REG_ARG_FUN_parity5_x_main_WE: std_logic;
  signal REG_d: std_logic_vector(63 downto 0);
  signal REG_d_RD: std_logic_vector(63 downto 0);
  signal REG_d_main_WR: std_logic_vector(63 downto 0);
  signal REG_d_main_WE: std_logic;
  signal REG_RET_FUN_parity3_p: std_logic;
  signal REG_RET_FUN_parity3_p_RD: std_logic;
  signal REG_RET_FUN_parity3_p_FUN_parity3_WR: std_logic;
  signal REG_RET_FUN_parity3_p_FUN_parity3_WE: std_logic;
  signal REG_p: std_logic;
  signal REG_p_main_WR: std_logic;
  signal REG_p_main_WE: std_logic;
  signal REG_ARG_FUN_parity2_x: std_logic_vector(63 downto 0);
  signal REG_ARG_FUN_parity2_x_RD: std_logic_vector(63 downto 0);
  signal REG_ARG_FUN_parity2_x_main_WR: std_logic_vector(63 downto 0);
  signal REG_ARG_FUN_parity2_x_main_WE: std_logic;
  signal REG_RET_FUN_parity5_p: std_logic;
  signal REG_RET_FUN_parity5_p_RD: std_logic;
  signal REG_RET_FUN_parity5_p_FUN_parity5_WR: std_logic;
  signal REG_RET_FUN_parity5_p_FUN_parity5_WE: std_logic;
  signal REG_ARG_FUN_parity4_x: std_logic_vector(63 downto 0);
  signal REG_ARG_FUN_parity4_x_RD: std_logic_vector(63 downto 0);
  signal REG_ARG_FUN_parity4_x_main_WR: std_logic_vector(63 downto 0);
  signal REG_ARG_FUN_parity4_x_main_WE: std_logic;
  signal REG_RET_FUN_parity2_p: std_logic;
  signal REG_RET_FUN_parity2_p_RD: std_logic;
  signal REG_RET_FUN_parity2_p_FUN_parity2_WR: std_logic;
  signal REG_RET_FUN_parity2_p_FUN_parity2_WE: std_logic;
  signal PRO_main_ENABLE: std_logic;
  signal PRO_main_END: std_logic;
  signal REG_ARG_FUN_parity1_x: std_logic_vector(63 downto 0);
  signal REG_ARG_FUN_parity1_x_RD: std_logic_vector(63 downto 0);
  signal REG_ARG_FUN_parity1_x_main_WR: std_logic_vector(63 downto 0);
  signal REG_ARG_FUN_parity1_x_main_WE: std_logic;
  signal REG_ARG_FUN_parity6_x: std_logic_vector(63 downto 0);
  signal REG_ARG_FUN_parity6_x_RD: std_logic_vector(63 downto 0);
  signal REG_ARG_FUN_parity6_x_main_WR: std_logic_vector(63 downto 0);
  signal REG_ARG_FUN_parity6_x_main_WE: std_logic;
  signal REG_RET_FUN_parity4_p: std_logic;
  signal REG_RET_FUN_parity4_p_RD: std_logic;
  signal REG_RET_FUN_parity4_p_FUN_parity4_WR: std_logic;
  signal REG_RET_FUN_parity4_p_FUN_parity4_WE: std_logic;
  signal REG_ARG_FUN_parity3_x: std_logic_vector(63 downto 0);
  signal REG_ARG_FUN_parity3_x_RD: std_logic_vector(63 downto 0);
  signal REG_ARG_FUN_parity3_x_main_WR: std_logic_vector(63 downto 0);
  signal REG_ARG_FUN_parity3_x_main_WE: std_logic;
  signal REG_RET_FUN_parity1_p: std_logic;
  signal REG_RET_FUN_parity1_p_RD: std_logic;
  signal REG_RET_FUN_parity1_p_FUN_parity1_WR: std_logic;
  signal REG_RET_FUN_parity1_p_FUN_parity1_WE: std_logic;
  signal MUTEX_LOCK_FUN_parity1_main_LOCK: std_logic;
  signal MUTEX_LOCK_FUN_parity1_main_LOCKed: std_logic;
  signal MUTEX_LOCK_FUN_parity1_main_UNLOCK: std_logic;
  signal MUTEX_LOCK_FUN_parity1_main_INIT: std_logic;
  signal MUTEX_LOCK_FUN_parity1_main_GD: std_logic;
  signal MUTEX_LOCK_FUN_parity1_LOCKed: std_logic;
  signal MUTEX_LOCK_FUN_parity2_main_LOCK: std_logic;
  signal MUTEX_LOCK_FUN_parity2_main_LOCKed: std_logic;
  signal MUTEX_LOCK_FUN_parity2_main_UNLOCK: std_logic;
  signal MUTEX_LOCK_FUN_parity2_main_INIT: std_logic;
  signal MUTEX_LOCK_FUN_parity2_main_GD: std_logic;
  signal MUTEX_LOCK_FUN_parity2_LOCKed: std_logic;
  signal MUTEX_LOCK_FUN_parity3_main_LOCK: std_logic;
  signal MUTEX_LOCK_FUN_parity3_main_LOCKed: std_logic;
  signal MUTEX_LOCK_FUN_parity3_main_UNLOCK: std_logic;
  signal MUTEX_LOCK_FUN_parity3_main_INIT: std_logic;
  signal MUTEX_LOCK_FUN_parity3_main_GD: std_logic;
  signal MUTEX_LOCK_FUN_parity3_LOCKed: std_logic;
  signal MUTEX_LOCK_FUN_parity4_main_LOCK: std_logic;
  signal MUTEX_LOCK_FUN_parity4_main_LOCKed: std_logic;
  signal MUTEX_LOCK_FUN_parity4_main_UNLOCK: std_logic;
  signal MUTEX_LOCK_FUN_parity4_main_INIT: std_logic;
  signal MUTEX_LOCK_FUN_parity4_main_GD: std_logic;
  signal MUTEX_LOCK_FUN_parity4_LOCKed: std_logic;
  signal REG_RET_FUN_parity6_p: std_logic;
  signal REG_RET_FUN_parity6_p_RD: std_logic;
  signal REG_RET_FUN_parity6_p_FUN_parity6_WR: std_logic;
  signal REG_RET_FUN_parity6_p_FUN_parity6_WE: std_logic;
  signal MUTEX_LOCK_FUN_parity5_main_LOCK: std_logic;
  signal MUTEX_LOCK_FUN_parity5_main_LOCKed: std_logic;
  signal MUTEX_LOCK_FUN_parity5_main_UNLOCK: std_logic;
  signal MUTEX_LOCK_FUN_parity5_main_INIT: std_logic;
  signal MUTEX_LOCK_FUN_parity5_main_GD: std_logic;
  signal MUTEX_LOCK_FUN_parity5_LOCKed: std_logic;
  signal MUTEX_LOCK_FUN_parity6_main_LOCK: std_logic;
  signal MUTEX_LOCK_FUN_parity6_main_LOCKed: std_logic;
  signal MUTEX_LOCK_FUN_parity6_main_UNLOCK: std_logic;
  signal MUTEX_LOCK_FUN_parity6_main_INIT: std_logic;
  signal MUTEX_LOCK_FUN_parity6_main_GD: std_logic;
  signal MUTEX_LOCK_FUN_parity6_LOCKed: std_logic;
  signal PRO_FUN_parity1_ENABLE: std_logic;
  signal PRO_FUN_parity1_END: std_logic;
  signal PRO_FUN_parity1_main_CALL: std_logic;
  signal PRO_FUN_parity1_main_GD: std_logic;
  signal PRO_FUN_parity2_ENABLE: std_logic;
  signal PRO_FUN_parity2_END: std_logic;
  signal PRO_FUN_parity2_main_CALL: std_logic;
  signal PRO_FUN_parity2_main_GD: std_logic;
  signal PRO_FUN_parity3_ENABLE: std_logic;
  signal PRO_FUN_parity3_END: std_logic;
  signal PRO_FUN_parity3_main_CALL: std_logic;
  signal PRO_FUN_parity3_main_GD: std_logic;
  signal PRO_FUN_parity4_ENABLE: std_logic;
  signal PRO_FUN_parity4_END: std_logic;
  signal PRO_FUN_parity4_main_CALL: std_logic;
  signal PRO_FUN_parity4_main_GD: std_logic;
  signal PRO_FUN_parity5_ENABLE: std_logic;
  signal PRO_FUN_parity5_END: std_logic;
  signal PRO_FUN_parity5_main_CALL: std_logic;
  signal PRO_FUN_parity5_main_GD: std_logic;
  signal PRO_FUN_parity6_ENABLE: std_logic;
  signal PRO_FUN_parity6_END: std_logic;
  signal PRO_FUN_parity6_main_CALL: std_logic;
  signal PRO_FUN_parity6_main_GD: std_logic;
  -- State Processing
  -- Aux. signals
  signal conpro_system_clk: std_logic;
  signal conpro_system_reset: std_logic;
begin
  -- Module implementation
  -- Register
  IMPL_REG_ARG_FUN_parity5_x: process(
          REG_ARG_FUN_parity5_x_main_WR,
          REG_ARG_FUN_parity5_x_main_WE,
          REG_ARG_FUN_parity5_x,
          conpro_system_clk,
          conpro_system_reset
          )
  begin
    REG_ARG_FUN_parity5_x_RD <= REG_ARG_FUN_parity5_x;
    if conpro_system_clk'event and conpro_system_clk='1' then
     if conpro_system_reset='1' then
      REG_ARG_FUN_parity5_x <= "0000000000000000000000000000000000000000000000000000000000000000";
     elsif REG_ARG_FUN_parity5_x_main_WE='1' then
      REG_ARG_FUN_parity5_x <= REG_ARG_FUN_parity5_x_main_WR;
     end if;
    end if;
  end process IMPL_REG_ARG_FUN_parity5_x;
  
  -- Register
  IMPL_REG_d: process(
          REG_d_main_WR,
          REG_d_main_WE,
          REG_d,
          conpro_system_clk,
          conpro_system_reset
          )
  begin
    REG_d_RD <= REG_d;
    if conpro_system_clk'event and conpro_system_clk='1' then
     if conpro_system_reset='1' then
      REG_d <= "0000000000000000000000000000000000000000000000000000000000000000";
     elsif REG_d_main_WE='1' then
      REG_d <= REG_d_main_WR;
     end if;
    end if;
  end process IMPL_REG_d;
  
  -- Register
  IMPL_REG_RET_FUN_parity3_p: process(
          REG_RET_FUN_parity3_p_FUN_parity3_WR,
          REG_RET_FUN_parity3_p_FUN_parity3_WE,
          REG_RET_FUN_parity3_p,
          conpro_system_clk,
          conpro_system_reset
          )
  begin
    REG_RET_FUN_parity3_p_RD <= REG_RET_FUN_parity3_p;
    if conpro_system_clk'event and conpro_system_clk='1' then
     if conpro_system_reset='1' then
      REG_RET_FUN_parity3_p <= '0';
     elsif REG_RET_FUN_parity3_p_FUN_parity3_WE='1' then
      REG_RET_FUN_parity3_p <= REG_RET_FUN_parity3_p_FUN_parity3_WR;
     end if;
    end if;
  end process IMPL_REG_RET_FUN_parity3_p;
  
  -- Register
  IMPL_REG_p: process(
          REG_p_main_WR,
          REG_p_main_WE,
          REG_p,
          conpro_system_clk,
          conpro_system_reset
          )
  begin
    if conpro_system_clk'event and conpro_system_clk='1' then
     if conpro_system_reset='1' then
      REG_p <= '0';
     elsif REG_p_main_WE='1' then
      REG_p <= REG_p_main_WR;
     end if;
    end if;
  end process IMPL_REG_p;
  
  -- Register
  IMPL_REG_ARG_FUN_parity2_x: process(
          REG_ARG_FUN_parity2_x_main_WR,
          REG_ARG_FUN_parity2_x_main_WE,
          REG_ARG_FUN_parity2_x,
          conpro_system_clk,
          conpro_system_reset
          )
  begin
    REG_ARG_FUN_parity2_x_RD <= REG_ARG_FUN_parity2_x;
    if conpro_system_clk'event and conpro_system_clk='1' then
     if conpro_system_reset='1' then
      REG_ARG_FUN_parity2_x <= "0000000000000000000000000000000000000000000000000000000000000000";
     elsif REG_ARG_FUN_parity2_x_main_WE='1' then
      REG_ARG_FUN_parity2_x <= REG_ARG_FUN_parity2_x_main_WR;
     end if;
    end if;
  end process IMPL_REG_ARG_FUN_parity2_x;
  
  -- Register
  IMPL_REG_RET_FUN_parity5_p: process(
          REG_RET_FUN_parity5_p_FUN_parity5_WR,
          REG_RET_FUN_parity5_p_FUN_parity5_WE,
          REG_RET_FUN_parity5_p,
          conpro_system_clk,
          conpro_system_reset
          )
  begin
    REG_RET_FUN_parity5_p_RD <= REG_RET_FUN_parity5_p;
    if conpro_system_clk'event and conpro_system_clk='1' then
     if conpro_system_reset='1' then
      REG_RET_FUN_parity5_p <= '0';
     elsif REG_RET_FUN_parity5_p_FUN_parity5_WE='1' then
      REG_RET_FUN_parity5_p <= REG_RET_FUN_parity5_p_FUN_parity5_WR;
     end if;
    end if;
  end process IMPL_REG_RET_FUN_parity5_p;
  
  -- Register
  IMPL_REG_ARG_FUN_parity4_x: process(
          REG_ARG_FUN_parity4_x_main_WR,
          REG_ARG_FUN_parity4_x_main_WE,
          REG_ARG_FUN_parity4_x,
          conpro_system_clk,
          conpro_system_reset
          )
  begin
    REG_ARG_FUN_parity4_x_RD <= REG_ARG_FUN_parity4_x;
    if conpro_system_clk'event and conpro_system_clk='1' then
     if conpro_system_reset='1' then
      REG_ARG_FUN_parity4_x <= "0000000000000000000000000000000000000000000000000000000000000000";
     elsif REG_ARG_FUN_parity4_x_main_WE='1' then
      REG_ARG_FUN_parity4_x <= REG_ARG_FUN_parity4_x_main_WR;
     end if;
    end if;
  end process IMPL_REG_ARG_FUN_parity4_x;
  
  -- Register
  IMPL_REG_RET_FUN_parity2_p: process(
          REG_RET_FUN_parity2_p_FUN_parity2_WR,
          REG_RET_FUN_parity2_p_FUN_parity2_WE,
          REG_RET_FUN_parity2_p,
          conpro_system_clk,
          conpro_system_reset
          )
  begin
    REG_RET_FUN_parity2_p_RD <= REG_RET_FUN_parity2_p;
    if conpro_system_clk'event and conpro_system_clk='1' then
     if conpro_system_reset='1' then
      REG_RET_FUN_parity2_p <= '0';
     elsif REG_RET_FUN_parity2_p_FUN_parity2_WE='1' then
      REG_RET_FUN_parity2_p <= REG_RET_FUN_parity2_p_FUN_parity2_WR;
     end if;
    end if;
  end process IMPL_REG_RET_FUN_parity2_p;
  
  -- Process control
  PRO_CONTROL_main: process(
          conpro_system_clk,
          conpro_system_reset
          )
  begin
    if conpro_system_clk'event and conpro_system_clk = '1' then
      if conpro_system_reset = '1' then
        PRO_main_ENABLE <= '1'; -- main process activated on reset
      end if;
    end if;
  end process PRO_CONTROL_main;
  
  -- Register
  IMPL_REG_ARG_FUN_parity1_x: process(
          REG_ARG_FUN_parity1_x_main_WR,
          REG_ARG_FUN_parity1_x_main_WE,
          REG_ARG_FUN_parity1_x,
          conpro_system_clk,
          conpro_system_reset
          )
  begin
    REG_ARG_FUN_parity1_x_RD <= REG_ARG_FUN_parity1_x;
    if conpro_system_clk'event and conpro_system_clk='1' then
     if conpro_system_reset='1' then
      REG_ARG_FUN_parity1_x <= "0000000000000000000000000000000000000000000000000000000000000000";
     elsif REG_ARG_FUN_parity1_x_main_WE='1' then
      REG_ARG_FUN_parity1_x <= REG_ARG_FUN_parity1_x_main_WR;
     end if;
    end if;
  end process IMPL_REG_ARG_FUN_parity1_x;
  
  -- Register
  IMPL_REG_ARG_FUN_parity6_x: process(
          REG_ARG_FUN_parity6_x_main_WR,
          REG_ARG_FUN_parity6_x_main_WE,
          REG_ARG_FUN_parity6_x,
          conpro_system_clk,
          conpro_system_reset
          )
  begin
    REG_ARG_FUN_parity6_x_RD <= REG_ARG_FUN_parity6_x;
    if conpro_system_clk'event and conpro_system_clk='1' then
     if conpro_system_reset='1' then
      REG_ARG_FUN_parity6_x <= "0000000000000000000000000000000000000000000000000000000000000000";
     elsif REG_ARG_FUN_parity6_x_main_WE='1' then
      REG_ARG_FUN_parity6_x <= REG_ARG_FUN_parity6_x_main_WR;
     end if;
    end if;
  end process IMPL_REG_ARG_FUN_parity6_x;
  
  -- Register
  IMPL_REG_RET_FUN_parity4_p: process(
          REG_RET_FUN_parity4_p_FUN_parity4_WR,
          REG_RET_FUN_parity4_p_FUN_parity4_WE,
          REG_RET_FUN_parity4_p,
          conpro_system_clk,
          conpro_system_reset
          )
  begin
    REG_RET_FUN_parity4_p_RD <= REG_RET_FUN_parity4_p;
    if conpro_system_clk'event and conpro_system_clk='1' then
     if conpro_system_reset='1' then
      REG_RET_FUN_parity4_p <= '0';
     elsif REG_RET_FUN_parity4_p_FUN_parity4_WE='1' then
      REG_RET_FUN_parity4_p <= REG_RET_FUN_parity4_p_FUN_parity4_WR;
     end if;
    end if;
  end process IMPL_REG_RET_FUN_parity4_p;
  
  -- Register
  IMPL_REG_ARG_FUN_parity3_x: process(
          REG_ARG_FUN_parity3_x_main_WR,
          REG_ARG_FUN_parity3_x_main_WE,
          REG_ARG_FUN_parity3_x,
          conpro_system_clk,
          conpro_system_reset
          )
  begin
    REG_ARG_FUN_parity3_x_RD <= REG_ARG_FUN_parity3_x;
    if conpro_system_clk'event and conpro_system_clk='1' then
     if conpro_system_reset='1' then
      REG_ARG_FUN_parity3_x <= "0000000000000000000000000000000000000000000000000000000000000000";
     elsif REG_ARG_FUN_parity3_x_main_WE='1' then
      REG_ARG_FUN_parity3_x <= REG_ARG_FUN_parity3_x_main_WR;
     end if;
    end if;
  end process IMPL_REG_ARG_FUN_parity3_x;
  
  -- Register
  IMPL_REG_RET_FUN_parity1_p: process(
          REG_RET_FUN_parity1_p_FUN_parity1_WR,
          REG_RET_FUN_parity1_p_FUN_parity1_WE,
          REG_RET_FUN_parity1_p,
          conpro_system_clk,
          conpro_system_reset
          )
  begin
    REG_RET_FUN_parity1_p_RD <= REG_RET_FUN_parity1_p;
    if conpro_system_clk'event and conpro_system_clk='1' then
     if conpro_system_reset='1' then
      REG_RET_FUN_parity1_p <= '0';
     elsif REG_RET_FUN_parity1_p_FUN_parity1_WE='1' then
      REG_RET_FUN_parity1_p <= REG_RET_FUN_parity1_p_FUN_parity1_WR;
     end if;
    end if;
  end process IMPL_REG_RET_FUN_parity1_p;
  
  --
  --  ConPro V2.1.D100 EMI Mutex.mutex V2.09
  --
  
  --
  -- EMI <Object Mutex.mutex.LOCK_FUN_parity1> Process
  --
  MUTEX_LOCK_FUN_parity1_SCHED: process(conpro_system_clk,
    conpro_system_reset,
    MUTEX_LOCK_FUN_parity1_main_INIT,
    MUTEX_LOCK_FUN_parity1_main_LOCKed,
    MUTEX_LOCK_FUN_parity1_main_LOCK,
    MUTEX_LOCK_FUN_parity1_LOCKed,
    MUTEX_LOCK_FUN_parity1_main_UNLOCK)
  begin
    if (conpro_system_clk'event) and ((conpro_system_clk) = ('1')) then
      if (conpro_system_reset) = ('1') then
        MUTEX_LOCK_FUN_parity1_LOCKed <= '0';
        MUTEX_LOCK_FUN_parity1_main_GD <= '1';
        MUTEX_LOCK_FUN_parity1_main_LOCKed <= '0';
      else
        MUTEX_LOCK_FUN_parity1_main_GD <= '1';
        if (MUTEX_LOCK_FUN_parity1_main_INIT) = ('1') then
          MUTEX_LOCK_FUN_parity1_LOCKed <= '0';
          MUTEX_LOCK_FUN_parity1_main_GD <= '0';
          if (MUTEX_LOCK_FUN_parity1_main_LOCKed) = ('1') then
            MUTEX_LOCK_FUN_parity1_main_LOCKed <= '0';
            MUTEX_LOCK_FUN_parity1_main_GD <= '0';
          end if;
        elsif ((MUTEX_LOCK_FUN_parity1_main_LOCK) = ('1')) and ((MUTEX_LOCK_FUN_parity1_LOCKed) = ('0')) then
          MUTEX_LOCK_FUN_parity1_LOCKed <= '1';
          MUTEX_LOCK_FUN_parity1_main_LOCKed <= '1';
          MUTEX_LOCK_FUN_parity1_main_GD <= '0';
        elsif (MUTEX_LOCK_FUN_parity1_main_UNLOCK) = ('1') then
          MUTEX_LOCK_FUN_parity1_LOCKed <= '0';
          MUTEX_LOCK_FUN_parity1_main_LOCKed <= '0';
          MUTEX_LOCK_FUN_parity1_main_GD <= '0';
        end if;
      end if;
    end if;
  end process MUTEX_LOCK_FUN_parity1_SCHED;
  --
  -- End of <Object Mutex.mutex.LOCK_FUN_parity1>
  --
  
  --
  --  ConPro V2.1.D100 EMI Mutex.mutex V2.09
  --
  
  --
  -- EMI <Object Mutex.mutex.LOCK_FUN_parity2> Process
  --
  MUTEX_LOCK_FUN_parity2_SCHED: process(conpro_system_clk,
    conpro_system_reset,
    MUTEX_LOCK_FUN_parity2_main_INIT,
    MUTEX_LOCK_FUN_parity2_main_LOCKed,
    MUTEX_LOCK_FUN_parity2_main_LOCK,
    MUTEX_LOCK_FUN_parity2_LOCKed,
    MUTEX_LOCK_FUN_parity2_main_UNLOCK)
  begin
    if (conpro_system_clk'event) and ((conpro_system_clk) = ('1')) then
      if (conpro_system_reset) = ('1') then
        MUTEX_LOCK_FUN_parity2_LOCKed <= '0';
        MUTEX_LOCK_FUN_parity2_main_GD <= '1';
        MUTEX_LOCK_FUN_parity2_main_LOCKed <= '0';
      else
        MUTEX_LOCK_FUN_parity2_main_GD <= '1';
        if (MUTEX_LOCK_FUN_parity2_main_INIT) = ('1') then
          MUTEX_LOCK_FUN_parity2_LOCKed <= '0';
          MUTEX_LOCK_FUN_parity2_main_GD <= '0';
          if (MUTEX_LOCK_FUN_parity2_main_LOCKed) = ('1') then
            MUTEX_LOCK_FUN_parity2_main_LOCKed <= '0';
            MUTEX_LOCK_FUN_parity2_main_GD <= '0';
          end if;
        elsif ((MUTEX_LOCK_FUN_parity2_main_LOCK) = ('1')) and ((MUTEX_LOCK_FUN_parity2_LOCKed) = ('0')) then
          MUTEX_LOCK_FUN_parity2_LOCKed <= '1';
          MUTEX_LOCK_FUN_parity2_main_LOCKed <= '1';
          MUTEX_LOCK_FUN_parity2_main_GD <= '0';
        elsif (MUTEX_LOCK_FUN_parity2_main_UNLOCK) = ('1') then
          MUTEX_LOCK_FUN_parity2_LOCKed <= '0';
          MUTEX_LOCK_FUN_parity2_main_LOCKed <= '0';
          MUTEX_LOCK_FUN_parity2_main_GD <= '0';
        end if;
      end if;
    end if;
  end process MUTEX_LOCK_FUN_parity2_SCHED;
  --
  -- End of <Object Mutex.mutex.LOCK_FUN_parity2>
  --
  
  --
  --  ConPro V2.1.D100 EMI Mutex.mutex V2.09
  --
  
  --
  -- EMI <Object Mutex.mutex.LOCK_FUN_parity3> Process
  --
  MUTEX_LOCK_FUN_parity3_SCHED: process(conpro_system_clk,
    conpro_system_reset,
    MUTEX_LOCK_FUN_parity3_main_INIT,
    MUTEX_LOCK_FUN_parity3_main_LOCKed,
    MUTEX_LOCK_FUN_parity3_main_LOCK,
    MUTEX_LOCK_FUN_parity3_LOCKed,
    MUTEX_LOCK_FUN_parity3_main_UNLOCK)
  begin
    if (conpro_system_clk'event) and ((conpro_system_clk) = ('1')) then
      if (conpro_system_reset) = ('1') then
        MUTEX_LOCK_FUN_parity3_LOCKed <= '0';
        MUTEX_LOCK_FUN_parity3_main_GD <= '1';
        MUTEX_LOCK_FUN_parity3_main_LOCKed <= '0';
      else
        MUTEX_LOCK_FUN_parity3_main_GD <= '1';
        if (MUTEX_LOCK_FUN_parity3_main_INIT) = ('1') then
          MUTEX_LOCK_FUN_parity3_LOCKed <= '0';
          MUTEX_LOCK_FUN_parity3_main_GD <= '0';
          if (MUTEX_LOCK_FUN_parity3_main_LOCKed) = ('1') then
            MUTEX_LOCK_FUN_parity3_main_LOCKed <= '0';
            MUTEX_LOCK_FUN_parity3_main_GD <= '0';
          end if;
        elsif ((MUTEX_LOCK_FUN_parity3_main_LOCK) = ('1')) and ((MUTEX_LOCK_FUN_parity3_LOCKed) = ('0')) then
          MUTEX_LOCK_FUN_parity3_LOCKed <= '1';
          MUTEX_LOCK_FUN_parity3_main_LOCKed <= '1';
          MUTEX_LOCK_FUN_parity3_main_GD <= '0';
        elsif (MUTEX_LOCK_FUN_parity3_main_UNLOCK) = ('1') then
          MUTEX_LOCK_FUN_parity3_LOCKed <= '0';
          MUTEX_LOCK_FUN_parity3_main_LOCKed <= '0';
          MUTEX_LOCK_FUN_parity3_main_GD <= '0';
        end if;
      end if;
    end if;
  end process MUTEX_LOCK_FUN_parity3_SCHED;
  --
  -- End of <Object Mutex.mutex.LOCK_FUN_parity3>
  --
  
  --
  --  ConPro V2.1.D100 EMI Mutex.mutex V2.09
  --
  
  --
  -- EMI <Object Mutex.mutex.LOCK_FUN_parity4> Process
  --
  MUTEX_LOCK_FUN_parity4_SCHED: process(conpro_system_clk,
    conpro_system_reset,
    MUTEX_LOCK_FUN_parity4_main_INIT,
    MUTEX_LOCK_FUN_parity4_main_LOCKed,
    MUTEX_LOCK_FUN_parity4_main_LOCK,
    MUTEX_LOCK_FUN_parity4_LOCKed,
    MUTEX_LOCK_FUN_parity4_main_UNLOCK)
  begin
    if (conpro_system_clk'event) and ((conpro_system_clk) = ('1')) then
      if (conpro_system_reset) = ('1') then
        MUTEX_LOCK_FUN_parity4_LOCKed <= '0';
        MUTEX_LOCK_FUN_parity4_main_GD <= '1';
        MUTEX_LOCK_FUN_parity4_main_LOCKed <= '0';
      else
        MUTEX_LOCK_FUN_parity4_main_GD <= '1';
        if (MUTEX_LOCK_FUN_parity4_main_INIT) = ('1') then
          MUTEX_LOCK_FUN_parity4_LOCKed <= '0';
          MUTEX_LOCK_FUN_parity4_main_GD <= '0';
          if (MUTEX_LOCK_FUN_parity4_main_LOCKed) = ('1') then
            MUTEX_LOCK_FUN_parity4_main_LOCKed <= '0';
            MUTEX_LOCK_FUN_parity4_main_GD <= '0';
          end if;
        elsif ((MUTEX_LOCK_FUN_parity4_main_LOCK) = ('1')) and ((MUTEX_LOCK_FUN_parity4_LOCKed) = ('0')) then
          MUTEX_LOCK_FUN_parity4_LOCKed <= '1';
          MUTEX_LOCK_FUN_parity4_main_LOCKed <= '1';
          MUTEX_LOCK_FUN_parity4_main_GD <= '0';
        elsif (MUTEX_LOCK_FUN_parity4_main_UNLOCK) = ('1') then
          MUTEX_LOCK_FUN_parity4_LOCKed <= '0';
          MUTEX_LOCK_FUN_parity4_main_LOCKed <= '0';
          MUTEX_LOCK_FUN_parity4_main_GD <= '0';
        end if;
      end if;
    end if;
  end process MUTEX_LOCK_FUN_parity4_SCHED;
  --
  -- End of <Object Mutex.mutex.LOCK_FUN_parity4>
  --
  
  -- Register
  IMPL_REG_RET_FUN_parity6_p: process(
          REG_RET_FUN_parity6_p_FUN_parity6_WR,
          REG_RET_FUN_parity6_p_FUN_parity6_WE,
          REG_RET_FUN_parity6_p,
          conpro_system_clk,
          conpro_system_reset
          )
  begin
    REG_RET_FUN_parity6_p_RD <= REG_RET_FUN_parity6_p;
    if conpro_system_clk'event and conpro_system_clk='1' then
     if conpro_system_reset='1' then
      REG_RET_FUN_parity6_p <= '0';
     elsif REG_RET_FUN_parity6_p_FUN_parity6_WE='1' then
      REG_RET_FUN_parity6_p <= REG_RET_FUN_parity6_p_FUN_parity6_WR;
     end if;
    end if;
  end process IMPL_REG_RET_FUN_parity6_p;
  
  --
  --  ConPro V2.1.D100 EMI Mutex.mutex V2.09
  --
  
  --
  -- EMI <Object Mutex.mutex.LOCK_FUN_parity5> Process
  --
  MUTEX_LOCK_FUN_parity5_SCHED: process(conpro_system_clk,
    conpro_system_reset,
    MUTEX_LOCK_FUN_parity5_main_INIT,
    MUTEX_LOCK_FUN_parity5_main_LOCKed,
    MUTEX_LOCK_FUN_parity5_main_LOCK,
    MUTEX_LOCK_FUN_parity5_LOCKed,
    MUTEX_LOCK_FUN_parity5_main_UNLOCK)
  begin
    if (conpro_system_clk'event) and ((conpro_system_clk) = ('1')) then
      if (conpro_system_reset) = ('1') then
        MUTEX_LOCK_FUN_parity5_LOCKed <= '0';
        MUTEX_LOCK_FUN_parity5_main_GD <= '1';
        MUTEX_LOCK_FUN_parity5_main_LOCKed <= '0';
      else
        MUTEX_LOCK_FUN_parity5_main_GD <= '1';
        if (MUTEX_LOCK_FUN_parity5_main_INIT) = ('1') then
          MUTEX_LOCK_FUN_parity5_LOCKed <= '0';
          MUTEX_LOCK_FUN_parity5_main_GD <= '0';
          if (MUTEX_LOCK_FUN_parity5_main_LOCKed) = ('1') then
            MUTEX_LOCK_FUN_parity5_main_LOCKed <= '0';
            MUTEX_LOCK_FUN_parity5_main_GD <= '0';
          end if;
        elsif ((MUTEX_LOCK_FUN_parity5_main_LOCK) = ('1')) and ((MUTEX_LOCK_FUN_parity5_LOCKed) = ('0')) then
          MUTEX_LOCK_FUN_parity5_LOCKed <= '1';
          MUTEX_LOCK_FUN_parity5_main_LOCKed <= '1';
          MUTEX_LOCK_FUN_parity5_main_GD <= '0';
        elsif (MUTEX_LOCK_FUN_parity5_main_UNLOCK) = ('1') then
          MUTEX_LOCK_FUN_parity5_LOCKed <= '0';
          MUTEX_LOCK_FUN_parity5_main_LOCKed <= '0';
          MUTEX_LOCK_FUN_parity5_main_GD <= '0';
        end if;
      end if;
    end if;
  end process MUTEX_LOCK_FUN_parity5_SCHED;
  --
  -- End of <Object Mutex.mutex.LOCK_FUN_parity5>
  --
  
  --
  --  ConPro V2.1.D100 EMI Mutex.mutex V2.09
  --
  
  --
  -- EMI <Object Mutex.mutex.LOCK_FUN_parity6> Process
  --
  MUTEX_LOCK_FUN_parity6_SCHED: process(conpro_system_clk,
    conpro_system_reset,
    MUTEX_LOCK_FUN_parity6_main_INIT,
    MUTEX_LOCK_FUN_parity6_main_LOCKed,
    MUTEX_LOCK_FUN_parity6_main_LOCK,
    MUTEX_LOCK_FUN_parity6_LOCKed,
    MUTEX_LOCK_FUN_parity6_main_UNLOCK)
  begin
    if (conpro_system_clk'event) and ((conpro_system_clk) = ('1')) then
      if (conpro_system_reset) = ('1') then
        MUTEX_LOCK_FUN_parity6_LOCKed <= '0';
        MUTEX_LOCK_FUN_parity6_main_GD <= '1';
        MUTEX_LOCK_FUN_parity6_main_LOCKed <= '0';
      else
        MUTEX_LOCK_FUN_parity6_main_GD <= '1';
        if (MUTEX_LOCK_FUN_parity6_main_INIT) = ('1') then
          MUTEX_LOCK_FUN_parity6_LOCKed <= '0';
          MUTEX_LOCK_FUN_parity6_main_GD <= '0';
          if (MUTEX_LOCK_FUN_parity6_main_LOCKed) = ('1') then
            MUTEX_LOCK_FUN_parity6_main_LOCKed <= '0';
            MUTEX_LOCK_FUN_parity6_main_GD <= '0';
          end if;
        elsif ((MUTEX_LOCK_FUN_parity6_main_LOCK) = ('1')) and ((MUTEX_LOCK_FUN_parity6_LOCKed) = ('0')) then
          MUTEX_LOCK_FUN_parity6_LOCKed <= '1';
          MUTEX_LOCK_FUN_parity6_main_LOCKed <= '1';
          MUTEX_LOCK_FUN_parity6_main_GD <= '0';
        elsif (MUTEX_LOCK_FUN_parity6_main_UNLOCK) = ('1') then
          MUTEX_LOCK_FUN_parity6_LOCKed <= '0';
          MUTEX_LOCK_FUN_parity6_main_LOCKed <= '0';
          MUTEX_LOCK_FUN_parity6_main_GD <= '0';
        end if;
      end if;
    end if;
  end process MUTEX_LOCK_FUN_parity6_SCHED;
  --
  -- End of <Object Mutex.mutex.LOCK_FUN_parity6>
  --
  
  -- Process control
  PRO_CONTROL_FUN_parity1: process(
          PRO_FUN_parity1_main_CALL,
          PRO_FUN_parity1_END,
          conpro_system_clk,
          conpro_system_reset
          )
  begin
    if conpro_system_clk'event and conpro_system_clk = '1' then
      if conpro_system_reset = '1' then
        PRO_FUN_parity1_ENABLE <= '0';
        PRO_FUN_parity1_main_GD <= '1';
      elsif PRO_FUN_parity1_main_CALL = '1' and PRO_FUN_parity1_END = '1' then
        PRO_FUN_parity1_main_GD <= '0';
        PRO_FUN_parity1_ENABLE <= '0';
      elsif PRO_FUN_parity1_main_CALL = '1' and PRO_FUN_parity1_END = '0' then
        PRO_FUN_parity1_ENABLE <= '1';
      else
        PRO_FUN_parity1_main_GD <= '1';
      end if;
    end if;
  end process PRO_CONTROL_FUN_parity1;
  
  -- Process control
  PRO_CONTROL_FUN_parity2: process(
          PRO_FUN_parity2_main_CALL,
          PRO_FUN_parity2_END,
          conpro_system_clk,
          conpro_system_reset
          )
  begin
    if conpro_system_clk'event and conpro_system_clk = '1' then
      if conpro_system_reset = '1' then
        PRO_FUN_parity2_ENABLE <= '0';
        PRO_FUN_parity2_main_GD <= '1';
      elsif PRO_FUN_parity2_main_CALL = '1' and PRO_FUN_parity2_END = '1' then
        PRO_FUN_parity2_main_GD <= '0';
        PRO_FUN_parity2_ENABLE <= '0';
      elsif PRO_FUN_parity2_main_CALL = '1' and PRO_FUN_parity2_END = '0' then
        PRO_FUN_parity2_ENABLE <= '1';
      else
        PRO_FUN_parity2_main_GD <= '1';
      end if;
    end if;
  end process PRO_CONTROL_FUN_parity2;
  
  -- Process control
  PRO_CONTROL_FUN_parity3: process(
          PRO_FUN_parity3_main_CALL,
          PRO_FUN_parity3_END,
          conpro_system_clk,
          conpro_system_reset
          )
  begin
    if conpro_system_clk'event and conpro_system_clk = '1' then
      if conpro_system_reset = '1' then
        PRO_FUN_parity3_ENABLE <= '0';
        PRO_FUN_parity3_main_GD <= '1';
      elsif PRO_FUN_parity3_main_CALL = '1' and PRO_FUN_parity3_END = '1' then
        PRO_FUN_parity3_main_GD <= '0';
        PRO_FUN_parity3_ENABLE <= '0';
      elsif PRO_FUN_parity3_main_CALL = '1' and PRO_FUN_parity3_END = '0' then
        PRO_FUN_parity3_ENABLE <= '1';
      else
        PRO_FUN_parity3_main_GD <= '1';
      end if;
    end if;
  end process PRO_CONTROL_FUN_parity3;
  
  -- Process control
  PRO_CONTROL_FUN_parity4: process(
          PRO_FUN_parity4_main_CALL,
          PRO_FUN_parity4_END,
          conpro_system_clk,
          conpro_system_reset
          )
  begin
    if conpro_system_clk'event and conpro_system_clk = '1' then
      if conpro_system_reset = '1' then
        PRO_FUN_parity4_ENABLE <= '0';
        PRO_FUN_parity4_main_GD <= '1';
      elsif PRO_FUN_parity4_main_CALL = '1' and PRO_FUN_parity4_END = '1' then
        PRO_FUN_parity4_main_GD <= '0';
        PRO_FUN_parity4_ENABLE <= '0';
      elsif PRO_FUN_parity4_main_CALL = '1' and PRO_FUN_parity4_END = '0' then
        PRO_FUN_parity4_ENABLE <= '1';
      else
        PRO_FUN_parity4_main_GD <= '1';
      end if;
    end if;
  end process PRO_CONTROL_FUN_parity4;
  
  -- Process control
  PRO_CONTROL_FUN_parity5: process(
          PRO_FUN_parity5_main_CALL,
          PRO_FUN_parity5_END,
          conpro_system_clk,
          conpro_system_reset
          )
  begin
    if conpro_system_clk'event and conpro_system_clk = '1' then
      if conpro_system_reset = '1' then
        PRO_FUN_parity5_ENABLE <= '0';
        PRO_FUN_parity5_main_GD <= '1';
      elsif PRO_FUN_parity5_main_CALL = '1' and PRO_FUN_parity5_END = '1' then
        PRO_FUN_parity5_main_GD <= '0';
        PRO_FUN_parity5_ENABLE <= '0';
      elsif PRO_FUN_parity5_main_CALL = '1' and PRO_FUN_parity5_END = '0' then
        PRO_FUN_parity5_ENABLE <= '1';
      else
        PRO_FUN_parity5_main_GD <= '1';
      end if;
    end if;
  end process PRO_CONTROL_FUN_parity5;
  
  -- Process control
  PRO_CONTROL_FUN_parity6: process(
          PRO_FUN_parity6_main_CALL,
          PRO_FUN_parity6_END,
          conpro_system_clk,
          conpro_system_reset
          )
  begin
    if conpro_system_clk'event and conpro_system_clk = '1' then
      if conpro_system_reset = '1' then
        PRO_FUN_parity6_ENABLE <= '0';
        PRO_FUN_parity6_main_GD <= '1';
      elsif PRO_FUN_parity6_main_CALL = '1' and PRO_FUN_parity6_END = '1' then
        PRO_FUN_parity6_main_GD <= '0';
        PRO_FUN_parity6_ENABLE <= '0';
      elsif PRO_FUN_parity6_main_CALL = '1' and PRO_FUN_parity6_END = '0' then
        PRO_FUN_parity6_ENABLE <= '1';
      else
        PRO_FUN_parity6_main_GD <= '1';
      end if;
    end if;
  end process PRO_CONTROL_FUN_parity6;
  
  
  -- Process instantiations
  PRO_MAP_FUN_parity1: par_FUN_parity1 port map(
    REG_ARG_FUN_parity1_x_RD => REG_ARG_FUN_parity1_x_RD,
    REG_RET_FUN_parity1_p_WR => REG_RET_FUN_parity1_p_FUN_parity1_WR,
    REG_RET_FUN_parity1_p_WE => REG_RET_FUN_parity1_p_FUN_parity1_WE,
    PRO_FUN_parity1_ENABLE => PRO_FUN_parity1_ENABLE,
    PRO_FUN_parity1_END => PRO_FUN_parity1_END,
    conpro_system_clk => conpro_system_clk,
    conpro_system_reset => conpro_system_reset
  );
  PRO_MAP_FUN_parity2: par_FUN_parity2 port map(
    REG_ARG_FUN_parity2_x_RD => REG_ARG_FUN_parity2_x_RD,
    REG_RET_FUN_parity2_p_WR => REG_RET_FUN_parity2_p_FUN_parity2_WR,
    REG_RET_FUN_parity2_p_WE => REG_RET_FUN_parity2_p_FUN_parity2_WE,
    PRO_FUN_parity2_ENABLE => PRO_FUN_parity2_ENABLE,
    PRO_FUN_parity2_END => PRO_FUN_parity2_END,
    conpro_system_clk => conpro_system_clk,
    conpro_system_reset => conpro_system_reset
  );
  PRO_MAP_FUN_parity3: par_FUN_parity3 port map(
    REG_RET_FUN_parity3_p_WR => REG_RET_FUN_parity3_p_FUN_parity3_WR,
    REG_RET_FUN_parity3_p_WE => REG_RET_FUN_parity3_p_FUN_parity3_WE,
    REG_ARG_FUN_parity3_x_RD => REG_ARG_FUN_parity3_x_RD,
    PRO_FUN_parity3_ENABLE => PRO_FUN_parity3_ENABLE,
    PRO_FUN_parity3_END => PRO_FUN_parity3_END,
    conpro_system_clk => conpro_system_clk,
    conpro_system_reset => conpro_system_reset
  );
  PRO_MAP_FUN_parity4: par_FUN_parity4 port map(
    REG_ARG_FUN_parity4_x_RD => REG_ARG_FUN_parity4_x_RD,
    REG_RET_FUN_parity4_p_WR => REG_RET_FUN_parity4_p_FUN_parity4_WR,
    REG_RET_FUN_parity4_p_WE => REG_RET_FUN_parity4_p_FUN_parity4_WE,
    PRO_FUN_parity4_ENABLE => PRO_FUN_parity4_ENABLE,
    PRO_FUN_parity4_END => PRO_FUN_parity4_END,
    conpro_system_clk => conpro_system_clk,
    conpro_system_reset => conpro_system_reset
  );
  PRO_MAP_FUN_parity5: par_FUN_parity5 port map(
    REG_ARG_FUN_parity5_x_RD => REG_ARG_FUN_parity5_x_RD,
    REG_RET_FUN_parity5_p_WR => REG_RET_FUN_parity5_p_FUN_parity5_WR,
    REG_RET_FUN_parity5_p_WE => REG_RET_FUN_parity5_p_FUN_parity5_WE,
    PRO_FUN_parity5_ENABLE => PRO_FUN_parity5_ENABLE,
    PRO_FUN_parity5_END => PRO_FUN_parity5_END,
    conpro_system_clk => conpro_system_clk,
    conpro_system_reset => conpro_system_reset
  );
  PRO_MAP_FUN_parity6: par_FUN_parity6 port map(
    REG_ARG_FUN_parity6_x_RD => REG_ARG_FUN_parity6_x_RD,
    REG_RET_FUN_parity6_p_WR => REG_RET_FUN_parity6_p_FUN_parity6_WR,
    REG_RET_FUN_parity6_p_WE => REG_RET_FUN_parity6_p_FUN_parity6_WE,
    PRO_FUN_parity6_ENABLE => PRO_FUN_parity6_ENABLE,
    PRO_FUN_parity6_END => PRO_FUN_parity6_END,
    conpro_system_clk => conpro_system_clk,
    conpro_system_reset => conpro_system_reset
  );
  PRO_MAP_main: par_main port map(
    REG_ARG_FUN_parity5_x_WR => REG_ARG_FUN_parity5_x_main_WR,
    REG_ARG_FUN_parity5_x_WE => REG_ARG_FUN_parity5_x_main_WE,
    REG_d_RD => REG_d_RD,
    REG_d_WR => REG_d_main_WR,
    REG_d_WE => REG_d_main_WE,
    REG_RET_FUN_parity3_p_RD => REG_RET_FUN_parity3_p_RD,
    REG_p_WR => REG_p_main_WR,
    REG_p_WE => REG_p_main_WE,
    REG_ARG_FUN_parity2_x_WR => REG_ARG_FUN_parity2_x_main_WR,
    REG_ARG_FUN_parity2_x_WE => REG_ARG_FUN_parity2_x_main_WE,
    REG_RET_FUN_parity5_p_RD => REG_RET_FUN_parity5_p_RD,
    REG_ARG_FUN_parity4_x_WR => REG_ARG_FUN_parity4_x_main_WR,
    REG_ARG_FUN_parity4_x_WE => REG_ARG_FUN_parity4_x_main_WE,
    REG_RET_FUN_parity2_p_RD => REG_RET_FUN_parity2_p_RD,
    REG_ARG_FUN_parity1_x_WR => REG_ARG_FUN_parity1_x_main_WR,
    REG_ARG_FUN_parity1_x_WE => REG_ARG_FUN_parity1_x_main_WE,
    REG_ARG_FUN_parity6_x_WR => REG_ARG_FUN_parity6_x_main_WR,
    REG_ARG_FUN_parity6_x_WE => REG_ARG_FUN_parity6_x_main_WE,
    REG_RET_FUN_parity4_p_RD => REG_RET_FUN_parity4_p_RD,
    REG_ARG_FUN_parity3_x_WR => REG_ARG_FUN_parity3_x_main_WR,
    REG_ARG_FUN_parity3_x_WE => REG_ARG_FUN_parity3_x_main_WE,
    REG_RET_FUN_parity1_p_RD => REG_RET_FUN_parity1_p_RD,
    MUTEX_LOCK_FUN_parity1_INIT => MUTEX_LOCK_FUN_parity1_main_INIT,
    MUTEX_LOCK_FUN_parity1_LOCK => MUTEX_LOCK_FUN_parity1_main_LOCK,
    MUTEX_LOCK_FUN_parity1_UNLOCK => MUTEX_LOCK_FUN_parity1_main_UNLOCK,
    MUTEX_LOCK_FUN_parity1_GD => MUTEX_LOCK_FUN_parity1_main_GD,
    MUTEX_LOCK_FUN_parity2_INIT => MUTEX_LOCK_FUN_parity2_main_INIT,
    MUTEX_LOCK_FUN_parity2_LOCK => MUTEX_LOCK_FUN_parity2_main_LOCK,
    MUTEX_LOCK_FUN_parity2_UNLOCK => MUTEX_LOCK_FUN_parity2_main_UNLOCK,
    MUTEX_LOCK_FUN_parity2_GD => MUTEX_LOCK_FUN_parity2_main_GD,
    MUTEX_LOCK_FUN_parity3_INIT => MUTEX_LOCK_FUN_parity3_main_INIT,
    MUTEX_LOCK_FUN_parity3_LOCK => MUTEX_LOCK_FUN_parity3_main_LOCK,
    MUTEX_LOCK_FUN_parity3_UNLOCK => MUTEX_LOCK_FUN_parity3_main_UNLOCK,
    MUTEX_LOCK_FUN_parity3_GD => MUTEX_LOCK_FUN_parity3_main_GD,
    MUTEX_LOCK_FUN_parity4_INIT => MUTEX_LOCK_FUN_parity4_main_INIT,
    MUTEX_LOCK_FUN_parity4_LOCK => MUTEX_LOCK_FUN_parity4_main_LOCK,
    MUTEX_LOCK_FUN_parity4_UNLOCK => MUTEX_LOCK_FUN_parity4_main_UNLOCK,
    MUTEX_LOCK_FUN_parity4_GD => MUTEX_LOCK_FUN_parity4_main_GD,
    REG_RET_FUN_parity6_p_RD => REG_RET_FUN_parity6_p_RD,
    PRO_FUN_parity1_CALL => PRO_FUN_parity1_main_CALL,
    PRO_FUN_parity1_GD => PRO_FUN_parity1_main_GD,
    MUTEX_LOCK_FUN_parity5_INIT => MUTEX_LOCK_FUN_parity5_main_INIT,
    MUTEX_LOCK_FUN_parity5_LOCK => MUTEX_LOCK_FUN_parity5_main_LOCK,
    MUTEX_LOCK_FUN_parity5_UNLOCK => MUTEX_LOCK_FUN_parity5_main_UNLOCK,
    MUTEX_LOCK_FUN_parity5_GD => MUTEX_LOCK_FUN_parity5_main_GD,
    PRO_FUN_parity2_CALL => PRO_FUN_parity2_main_CALL,
    PRO_FUN_parity2_GD => PRO_FUN_parity2_main_GD,
    MUTEX_LOCK_FUN_parity6_INIT => MUTEX_LOCK_FUN_parity6_main_INIT,
    MUTEX_LOCK_FUN_parity6_LOCK => MUTEX_LOCK_FUN_parity6_main_LOCK,
    MUTEX_LOCK_FUN_parity6_UNLOCK => MUTEX_LOCK_FUN_parity6_main_UNLOCK,
    MUTEX_LOCK_FUN_parity6_GD => MUTEX_LOCK_FUN_parity6_main_GD,
    PRO_FUN_parity3_CALL => PRO_FUN_parity3_main_CALL,
    PRO_FUN_parity3_GD => PRO_FUN_parity3_main_GD,
    PRO_FUN_parity4_CALL => PRO_FUN_parity4_main_CALL,
    PRO_FUN_parity4_GD => PRO_FUN_parity4_main_GD,
    PRO_FUN_parity5_CALL => PRO_FUN_parity5_main_CALL,
    PRO_FUN_parity5_GD => PRO_FUN_parity5_main_GD,
    PRO_FUN_parity6_CALL => PRO_FUN_parity6_main_CALL,
    PRO_FUN_parity6_GD => PRO_FUN_parity6_main_GD,
    PRO_main_ENABLE => PRO_main_ENABLE,
    PRO_main_END => PRO_main_END,
    conpro_system_clk => conpro_system_clk,
    conpro_system_reset => conpro_system_reset
  );
  
  -- Toplevel assignments
  -- Monitors
  d_RD <= REG_d;
  p_RD <= REG_p;
  conpro_system_clk <= CLK;
  conpro_system_reset <= RESET;
end main;
