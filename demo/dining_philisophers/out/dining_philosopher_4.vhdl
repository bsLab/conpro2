--
-- Automatically generated by
-- CONPRO: Hardware Synthesis with an Imperative High Level Multiprocess Approach
--         (c) 2006-2010 by BSSLAB, Dr. Stefan Bosse
--         Version: 2.1 Revision: D148 Genetic size: 2661823
--         Compile date: Fri Apr 23 17:13:19 CEST 2010
--         Compiled by:  sbosse
--         Compiled on:  SunOS sunsil 5.10 Generic_137137-09 sun4u sparc SUNW,Sun-Blade-2500

-- Process implementation of process <philosopher_4> from module <Dining>.
--
library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.std_logic_arith.all;
use IEEE.std_logic_unsigned.all;
use IEEE.numeric_std.all;
use work.ConPRO.all;
entity dining_philosopher_4 is
port(
  -- Connections to external objects, components and the outside world
  signal REG_thinking_4_WR: out std_logic;
  signal REG_thinking_4_WE: out std_logic;
  signal SEMA_fork_DOWN: out std_logic;
  signal SEMA_fork_UP: out std_logic;
  signal SEMA_fork_GD: in std_logic;
  signal SEMA_fork_SEL: out integer;
  signal REG_eating_4_WR: out std_logic;
  signal REG_eating_4_WE: out std_logic;
  signal PRO_philosopher_4_ENABLE: in std_logic;
  signal PRO_philosopher_4_END: out std_logic;
  signal conpro_system_clk: in std_logic;
  signal conpro_system_reset: in std_logic
);
end dining_philosopher_4;
architecture main of dining_philosopher_4 is
  -- Local and temporary data objects
  signal TEMP_0: std_logic_vector(3 downto 0);
  -- Auxilliary ALU signals
  -- State Processing
  type pro_states is (
    S_philosopher_4_start, -- PROCESS0[:0]
    S_i2_fun, -- FUN43407[dining.cp:74]
    S_i3_fun, -- FUN5412[dining.cp:75]
    S_i4_bind_to_5, -- ASSIGN31439[dining.cp:45]
    S_i6_delay, -- COND_LOOP61683[dining.cp:47]
    S_i6_delay_loop, -- COND_LOOP61683[dining.cp:47]
    S_i7_bind_to_8, -- ASSIGN92729[dining.cp:50]
    S_i9_fun, -- FUN50798[dining.cp:77]
    S_i10_fun, -- FUN52287[dining.cp:78]
    S_philosopher_4_end -- PROCESS0[:0]
    );
  signal pro_state: pro_states := S_philosopher_4_start;
  signal pro_state_next: pro_states := S_philosopher_4_start;
  -- Auxilliary toplevel definitions
begin
  state_transition: process(
          PRO_philosopher_4_ENABLE,
          pro_state_next,
          conpro_system_clk,
          conpro_system_reset
  )
  begin
    if conpro_system_clk'event and conpro_system_clk='1' then
      if conpro_system_reset='1' or PRO_philosopher_4_ENABLE='0' then
        pro_state <= S_philosopher_4_start;
      else
        pro_state <= pro_state_next;
      end if;
    end if;
  end process state_transition;
  -- Process implementation
  -- Instruction Controlpath Unit - The Leitwerk
  control_path: process(
          SEMA_fork_GD,
          TEMP_0,
          pro_state
          )
  begin
    PRO_philosopher_4_END <= '0';
    case pro_state is
      when S_philosopher_4_start => -- PROCESS0[:0]
        pro_state_next <= S_i2_fun;
      when S_i2_fun => -- FUN43407[dining.cp:74]
        if not((SEMA_fork_GD) = ('0')) then
          pro_state_next <= S_i2_fun;
        else
          pro_state_next <= S_i3_fun;
        end if;
      when S_i3_fun => -- FUN5412[dining.cp:75]
        if not((SEMA_fork_GD) = ('0')) then
          pro_state_next <= S_i3_fun;
        else
          pro_state_next <= S_i4_bind_to_5;
        end if;
      when S_i4_bind_to_5 => -- ASSIGN31439[dining.cp:45]
        pro_state_next <= S_i6_delay;
      when S_i6_delay => -- COND_LOOP61683[dining.cp:47]
        pro_state_next <= S_i6_delay_loop;
      when S_i6_delay_loop => -- COND_LOOP61683[dining.cp:47]
        if TEMP_0 = "0000" then
          pro_state_next <= S_i7_bind_to_8;
        else
          pro_state_next <= S_i6_delay_loop;
        end if;
      when S_i7_bind_to_8 => -- ASSIGN92729[dining.cp:50]
        pro_state_next <= S_i9_fun;
      when S_i9_fun => -- FUN50798[dining.cp:77]
        if not((SEMA_fork_GD) = ('0')) then
          pro_state_next <= S_i9_fun;
        else
          pro_state_next <= S_i10_fun;
        end if;
      when S_i10_fun => -- FUN52287[dining.cp:78]
        if not((SEMA_fork_GD) = ('0')) then
          pro_state_next <= S_i10_fun;
        else
          pro_state_next <= S_i2_fun;
        end if;
      when S_philosopher_4_end => -- PROCESS0[:0]
        pro_state_next <= S_philosopher_4_end;
        PRO_philosopher_4_END <= '1';
    end case;
  end process control_path;
  
  -- Instruction Datapath Combinational Unit
  data_path: process(
          pro_state
          )
  begin
    -- Default values
    SEMA_fork_DOWN <= '0';
    SEMA_fork_SEL <= 0;
    REG_thinking_4_WR <= '0';
    REG_thinking_4_WE <= '0';
    REG_eating_4_WR <= '0';
    REG_eating_4_WE <= '0';
    SEMA_fork_UP <= '0';
    case pro_state is
      when S_philosopher_4_start => -- PROCESS0[:0]
        null;
      when S_i2_fun => -- FUN43407[dining.cp:74]
        SEMA_fork_DOWN <= SEMA_fork_GD;
        SEMA_fork_SEL <= 4;
      when S_i3_fun => -- FUN5412[dining.cp:75]
        SEMA_fork_DOWN <= SEMA_fork_GD;
        SEMA_fork_SEL <= 0;
      when S_i4_bind_to_5 => -- ASSIGN31439[dining.cp:45]
        REG_thinking_4_WR <= '0';
        REG_thinking_4_WE <= '1';
        REG_eating_4_WR <= '1';
        REG_eating_4_WE <= '1';
      when S_i6_delay => -- COND_LOOP61683[dining.cp:47]
        null;
      when S_i6_delay_loop => -- COND_LOOP61683[dining.cp:47]
        null;
      when S_i7_bind_to_8 => -- ASSIGN92729[dining.cp:50]
        REG_thinking_4_WR <= '1';
        REG_thinking_4_WE <= '1';
        REG_eating_4_WR <= '0';
        REG_eating_4_WE <= '1';
      when S_i9_fun => -- FUN50798[dining.cp:77]
        SEMA_fork_UP <= SEMA_fork_GD;
        SEMA_fork_SEL <= 4;
      when S_i10_fun => -- FUN52287[dining.cp:78]
        SEMA_fork_UP <= SEMA_fork_GD;
        SEMA_fork_SEL <= 0;
      when S_philosopher_4_end => -- PROCESS0[:0]
        null;
    end case;
  end process data_path;
  
  -- Instruction Datapath Transitional Unit
  data_trans: process(
          TEMP_0,
          conpro_system_clk,
          conpro_system_reset,
          pro_state
          )
  begin
    if conpro_system_clk'event and conpro_system_clk='1' then
      if conpro_system_reset = '1' then
        TEMP_0 <= "0000";
      else
        case pro_state is
          when S_philosopher_4_start => -- PROCESS0[:0]
            null;
          when S_i2_fun => -- FUN43407[dining.cp:74]
            null;
          when S_i3_fun => -- FUN5412[dining.cp:75]
            null;
          when S_i4_bind_to_5 => -- ASSIGN31439[dining.cp:45]
            null;
          when S_i6_delay => -- COND_LOOP61683[dining.cp:47]
            TEMP_0 <= "0011";
          when S_i6_delay_loop => -- COND_LOOP61683[dining.cp:47]
            TEMP_0 <= TEMP_0 - "0001";
          when S_i7_bind_to_8 => -- ASSIGN92729[dining.cp:50]
            null;
          when S_i9_fun => -- FUN50798[dining.cp:77]
            null;
          when S_i10_fun => -- FUN52287[dining.cp:78]
            null;
          when S_philosopher_4_end => -- PROCESS0[:0]
            null;
        end case;
      end if;
    end if;
  end process data_trans;
  
  -- Object implementation
  
  -- Toplevel assignments
  -- Monitors
end main;
