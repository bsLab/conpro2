#	Define SciTE settings for SeSAm Model Language SEM files
#
# To fully enable this Scintilla lexer, make sure the following entries
#	are present and uncommented in your SciTE properties:
#
#		$(filter.sem)
#
#		SEM|sem|
#
#		import sem

# SEM implementation and interface files
file.patterns.sem=*.sem

filter.sem=SEM (sem)|$(file.patterns.sem)|

lexer.$(file.patterns.sem)=lua

keywords.$(file.patterns.sem)= \
and case def do done downto else end \
false for fun \
if in extend \
of or  \
then to transition true \
 val when while

keywords2.$(file.patterns.sem)= \
 abs and mod nand nor not or rem rol ror sla sll sra srl xnor xor

keywords2.$(file.patterns.sem)= \
 agent feature resource world

keywords3.$(file.patterns.sem)= \
 integer double string simobject spatialinfo color list iterator position \
 void file boolean activity

keywords4.$(file.patterns.sem)= \
  type use open

keywords5.$(file.patterns.sem)= \
  private mutable

keywords6.$(file.patterns.sem)= \


word.chars.sem=$(chars.alpha)$(chars.numeric)_
word.characters.$(file.patterns.sem)=$(word.chars.sem)

comment.block.sem=--
#comment.stream.start.sem=
#comment.stream.end.sem=
#comment.box.start.sem=--
#comment.box.middle.sem=--
#comment.box.end.sem= --


#Default
style.lua.32=$(font.code.base),fore:#000000
# White space: Visible only in View Whitespace mode (or if it has a back colour)
style.lua.0=fore:#FF0000
# Block comment (Lua 5.0)
style.lua.1=$(colour.code.comment.box),$(font.code.comment.box),back:#D0F0F0,eolfilled
# Line comment
style.lua.2=$(colour.code.comment.line),$(font.code.comment.line)
# Doc comment -- Not used in Lua (yet?)
style.lua.3=$(colour.notused),$(font.notused)
# Number
style.lua.4=$(colour.number)
# Keyword
style.lua.5=$(colour.keyword),bold
# (Double quoted) String
style.lua.6=$(colour.string)
# Character (Single quoted string)
style.lua.7=$(colour.char)
# Literal string
style.lua.8=$(colour.string),$(font.code.comment.box),back:#E0FFFF
# Preprocessor (obsolete in Lua 4.0 and up)
style.lua.9=$(colour.preproc)
# Operators
style.lua.10=$(colour.operator)
# Identifier (everything else...)
style.lua.11=
# End of line where string is not closed
style.lua.12=back:#E0C0E0
# Keywords 2
style.lua.13=fore:#C00000,bold
# Keywords 3
style.lua.14=fore:#C00000,bold
# Keywords 4
style.lua.15=fore:#000000,bold
# Keywords 5
style.lua.16=fore:#C00000
style.lua.17=back:#FFFFF5
style.lua.18=back:#FFA0A0
style.lua.19=back:#FFF5F5
# Labels
style.lua.20=fore:#7F7F00
# Braces are only matched in operator style
braces.lua.style=10
