--
-- Automatically generated by
-- CONPRO: Hardware Synthesis with an Imperative High Level Multiprocess Approach
--         (C) 2006-2008 ** BSSLAB, Dr. Stefan Bosse
--         Version 2.1 D18 **  2049142 total genes
--         Compiled on Thu Nov 27 11:07:26 CET 2008
--         Compiled by sbosse
--         Compiled on SunOS sun203 5.10 Generic_118833-33 sun4u sparc SUNW,A70

-- Process implementation of process <p_0> from module <T>.
--
library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.std_logic_arith.all;
use IEEE.std_logic_unsigned.all;
use IEEE.numeric_std.all;
entity t_p_0 is
port(
  -- Connections to external objects, components and the outside world
  signal REG_d_0_WR: out signed(7 downto 0);
  signal REG_d_0_WE: out std_logic;
  signal TIMER_t_AWAIT: out std_logic;
  signal TIMER_t_GD: in std_logic;
  signal PRO_p_0_ENABLE: in std_logic;
  signal PRO_p_0_END: out std_logic;
  signal conpro_system_clk: in std_logic;
  signal conpro_system_reset: in std_logic
);
end t_p_0;
architecture main of t_p_0 is
  -- Local and temporary data objects
  signal LOOP_i_0: signed(3 downto 0);
  -- Auxilliary ALU signals
  -- State Processing
  type pro_states is (
    S_p_0_start, -- PROCESS0[:0]
    S_i1_for_loop, -- COUNT_LOOP91172[t.cp:18]
    S_i1_for_loop_cond, -- COUNT_LOOP91172[t.cp:18]
    S_i2_fun, -- FUN34847[t.cp:20]
    S_i3_assign, -- ASSIGN59662[t.cp:21]
    S_i4_assign, -- ASSIGN8650[t.cp:22]
    S_i1_for_loop_incr, -- COUNT_LOOP91172[t.cp:18]
    S_p_0_end -- PROCESS0[:0]
    );
  signal pro_state: pro_states := S_p_0_start;
  signal pro_state_next: pro_states := S_p_0_start;
  -- Auxilliary toplevel definitions
  constant CONST_I4_1: signed(3 downto 0) := "0001";
  constant CONST_I4_5: signed(3 downto 0) := "0101";
  constant CONST_I8_1: signed(7 downto 0) := "00000001";
  constant CONST_I8_0: signed(7 downto 0) := "00000000";
begin
  state_transition: process(
          PRO_p_0_ENABLE,
          pro_state_next,
          conpro_system_clk,
          conpro_system_reset
  )
  begin
    if conpro_system_clk'event and conpro_system_clk='1' then
      if conpro_system_reset='1' or PRO_p_0_ENABLE='0' then
        pro_state <= S_p_0_start;
      else
        pro_state <= pro_state_next;
      end if;
    end if;
  end process state_transition;
  -- Process implementation
  -- Instruction Controlpath Unit - The Leitwerk
  control_path: process(
          LOOP_i_0,
          TIMER_t_GD,
          pro_state
          )
  begin
    PRO_p_0_END <= '0';
    case pro_state is
      when S_p_0_start => -- PROCESS0[:0]
        pro_state_next <= S_i1_for_loop;
      when S_i1_for_loop => -- COUNT_LOOP91172[t.cp:18]
        pro_state_next <= S_i1_for_loop_cond;
      when S_i1_for_loop_cond => -- COUNT_LOOP91172[t.cp:18]
        if CONST_I4_5 >= LOOP_i_0 then
          pro_state_next <= S_i2_fun;
        else
          pro_state_next <= S_p_0_end;
        end if;
      when S_i2_fun => -- FUN34847[t.cp:20]
        if not((TIMER_t_GD) = ('0')) then
          pro_state_next <= S_i2_fun;
        else
          pro_state_next <= S_i3_assign;
        end if;
      when S_i3_assign => -- ASSIGN59662[t.cp:21]
        pro_state_next <= S_i4_assign;
      when S_i4_assign => -- ASSIGN8650[t.cp:22]
        pro_state_next <= S_i1_for_loop_incr;
      when S_i1_for_loop_incr => -- COUNT_LOOP91172[t.cp:18]
        pro_state_next <= S_i1_for_loop_cond;
      when S_p_0_end => -- PROCESS0[:0]
        pro_state_next <= S_p_0_end;
        PRO_p_0_END <= '1';
    end case;
  end process control_path;
  
  -- Instruction Datapath Combinational Unit
  data_path: process(
          LOOP_i_0,
          pro_state
          )
  begin
    -- Default values
    TIMER_t_AWAIT <= '0';
    REG_d_0_WR <= to_signed(0,8);
    REG_d_0_WE <= '0';
    case pro_state is
      when S_p_0_start => -- PROCESS0[:0]
        null;
      when S_i1_for_loop => -- COUNT_LOOP91172[t.cp:18]
        null;
      when S_i1_for_loop_cond => -- COUNT_LOOP91172[t.cp:18]
        null;
      when S_i2_fun => -- FUN34847[t.cp:20]
        TIMER_t_AWAIT <= '1';
      when S_i3_assign => -- ASSIGN59662[t.cp:21]
        REG_d_0_WR <= CONST_I8_1;
        REG_d_0_WE <= '1';
      when S_i4_assign => -- ASSIGN8650[t.cp:22]
        REG_d_0_WR <= CONST_I8_0;
        REG_d_0_WE <= '1';
      when S_i1_for_loop_incr => -- COUNT_LOOP91172[t.cp:18]
        null;
      when S_p_0_end => -- PROCESS0[:0]
        null;
    end case;
  end process data_path;
  
  -- Instruction Datapath Transitional Unit
  data_trans: process(
          conpro_system_clk,
          conpro_system_reset,
          pro_state
          )
  begin
    if conpro_system_clk'event and conpro_system_clk='1' then
      if conpro_system_reset = '1' then
        LOOP_i_0 <= to_signed(0,4);
      else
        case pro_state is
          when S_p_0_start => -- PROCESS0[:0]
            null;
          when S_i1_for_loop => -- COUNT_LOOP91172[t.cp:18]
            LOOP_i_0 <= CONST_I4_1;
          when S_i1_for_loop_cond => -- COUNT_LOOP91172[t.cp:18]
            null;
          when S_i2_fun => -- FUN34847[t.cp:20]
            null;
          when S_i3_assign => -- ASSIGN59662[t.cp:21]
            null;
          when S_i4_assign => -- ASSIGN8650[t.cp:22]
            null;
          when S_i1_for_loop_incr => -- COUNT_LOOP91172[t.cp:18]
            LOOP_i_0 <= LOOP_i_0 + CONST_I4_1;
          when S_p_0_end => -- PROCESS0[:0]
            null;
        end case;
      end if;
    end if;
  end process data_trans;
  
  -- Object implementation
  
  -- Toplevel assignments
  -- Monitors
end main;
