--
-- Automatically generated by
-- CONPRO: Hardware Synthesis with an Imperative High Level Multiprocess Approach
--         (c) 2006-2010 by BSSLAB, Dr. Stefan Bosse
--         Version: 2.1 Revision: D149 Genetic size: 2681845
--         Compile date: Wed Apr 28 18:22:40 CEST 2010
--         Compiled by:  sbosse
--         Compiled on:  SunOS sunsil 5.10 Generic_137137-09 sun4u sparc SUNW,Sun-Blade-2500

-- Process implementation of process <sys_status_proc> from module <Com>.
--
library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.std_logic_arith.all;
use IEEE.numeric_std.all;
use IEEE.std_logic_unsigned.all;
use work.ConPRO.all;
entity com_sys_status_proc is
port(
  -- Connections to external objects, components and the outside world
  signal REG_sys_status_RD: in std_logic_vector(2 downto 0);
  signal REG_sys_status_WR: out std_logic_vector(2 downto 0);
  signal REG_sys_status_WE: out std_logic;
  signal REG_sys_status_GD: in std_logic;
  signal REG_stat_led_WR: out std_logic;
  signal REG_stat_led_WE: out std_logic;
  signal REG_sys_status_next_RD: in std_logic_vector(2 downto 0);
  signal REG_sys_status_next_WR: out std_logic_vector(2 downto 0);
  signal REG_sys_status_next_WE: out std_logic;
  signal REG_sys_status_next_GD: in std_logic;
  signal TIMER_watch_timer_INIT: out std_logic;
  signal TIMER_watch_timer_AWAIT: out std_logic;
  signal TIMER_watch_timer_START: out std_logic;
  signal TIMER_watch_timer_GD: in std_logic;
  signal PRO_sys_status_proc_ENABLE: in std_logic;
  signal PRO_sys_status_proc_END: out std_logic;
  signal conpro_system_clk: in std_logic;
  signal conpro_system_reset: in std_logic
);
end com_sys_status_proc;
architecture main of com_sys_status_proc is
  -- Local and temporary data objects
  signal last_status: std_logic_vector(2 downto 0);
  signal counter: signed(5 downto 0);
  signal onl: std_logic;
  -- Auxilliary ALU signals
  -- State Processing
  type pro_states is (
    S_sys_status_proc_start, -- PROCESS0[:0]
    S_i1_assign, -- ASSIGN23890[com.cp:59]
    S_i2_bind_to_3, -- ASSIGN71138[com.cp:61]
    S_i4_fun, -- FUN77851[com.cp:64]
    S_i5_fun, -- FUN56314[com.cp:65]
    S_i6_assign, -- ASSIGN37171[com.cp:67]
    S_i7_assign, -- ASSIGN15578[com.cp:68]
    S_i9_assign, -- ASSIGN57915[com.cp:72]
    S_i10_select, -- SELECT_CASE19215[com.cp:112]
    S_i11_bind_to_13, -- ASSIGN14545[com.cp:79]
    S_i14_bind_to_16, -- ASSIGN8441[com.cp:84]
    S_i17_branch, -- BRANCH25871[com.cp:88]
    S_i18_bind_to_20, -- ASSIGN38972[com.cp:91]
    S_i21_branch, -- BRANCH58310[com.cp:93]
    S_i22_bind_to_23, -- ASSIGN77977[com.cp:95]
    S_i24_assign, -- ASSIGN87455[com.cp:97]
    S_i25_branch, -- BRANCH13567[com.cp:101]
    S_i26_bind_to_27, -- ASSIGN67142[com.cp:103]
    S_i28_assign, -- ASSIGN14484[com.cp:104]
    S_i29_branch, -- BRANCH17121[com.cp:106]
    S_i30_bind_to_31, -- ASSIGN83041[com.cp:108]
    S_i32_assign, -- ASSIGN95086[com.cp:110]
    S_i33_branch, -- BRANCH24577[com.cp:114]
    S_i34_bind_to_35, -- ASSIGN83891[com.cp:116]
    S_i36_branch, -- BRANCH78627[com.cp:118]
    S_i37_assign, -- ASSIGN22215[com.cp:120]
    S_i38_assign, -- ASSIGN10492[com.cp:121]
    S_i39_assign, -- ASSIGN7089[com.cp:125]
    S_i40_assign, -- ASSIGN2398[com.cp:126]
    S_i41_assign, -- ASSIGN45421[com.cp:130]
    S_i42_branch, -- BRANCH75600[com.cp:131]
    S_i43_assign, -- ASSIGN86320[com.cp:131]
    S_i44_assign, -- ASSIGN28093[com.cp:131]
    S_i45_fun, -- FUN24852[com.cp:132]
    S_sys_status_proc_end -- PROCESS0[:0]
    );
  signal pro_state: pro_states := S_sys_status_proc_start;
  signal pro_state_next: pro_states := S_sys_status_proc_start;
  -- Auxilliary toplevel definitions
  constant CONST_I6_0: signed(5 downto 0) := "000000";
  constant CONST_I6_2: signed(5 downto 0) := "000010";
  constant CONST_I6_1: signed(5 downto 0) := "000001";
  constant CONST_I6_6: signed(5 downto 0) := "000110";
  constant CONST_I6_3: signed(5 downto 0) := "000011";
begin
  state_transition: process(
          PRO_sys_status_proc_ENABLE,
          pro_state_next,
          conpro_system_clk,
          conpro_system_reset
  )
  begin
    if conpro_system_clk'event and conpro_system_clk='1' then
      if conpro_system_reset='0' or PRO_sys_status_proc_ENABLE='0' then
        pro_state <= S_sys_status_proc_start;
      else
        pro_state <= pro_state_next;
      end if;
    end if;
  end process state_transition;
  -- Process implementation
  -- Instruction Controlpath Unit - The Leitwerk
  control_path: process(
          TIMER_watch_timer_GD,
          REG_sys_status_next_GD,
          REG_sys_status_RD,
          counter,
          onl,
          REG_sys_status_GD,
          pro_state
          )
  begin
    PRO_sys_status_proc_END <= '0';
    case pro_state is
      when S_sys_status_proc_start => -- PROCESS0[:0]
        pro_state_next <= S_i1_assign;
      when S_i1_assign => -- ASSIGN23890[com.cp:59]
        pro_state_next <= S_i2_bind_to_3;
      when S_i2_bind_to_3 => -- ASSIGN71138[com.cp:61]
        pro_state_next <= S_i4_fun;
      when S_i4_fun => -- FUN77851[com.cp:64]
        if not((TIMER_watch_timer_GD) = ('0')) then
          pro_state_next <= S_i4_fun;
        else
          pro_state_next <= S_i5_fun;
        end if;
      when S_i5_fun => -- FUN56314[com.cp:65]
        if not((TIMER_watch_timer_GD) = ('0')) then
          pro_state_next <= S_i5_fun;
        else
          pro_state_next <= S_i6_assign;
        end if;
      when S_i6_assign => -- ASSIGN37171[com.cp:67]
        pro_state_next <= S_i7_assign;
      when S_i7_assign => -- ASSIGN15578[com.cp:68]
        if REG_sys_status_next_GD = '1' then
          pro_state_next <= S_i7_assign;
        else
          pro_state_next <= S_i9_assign;
        end if;
      when S_i9_assign => -- ASSIGN57915[com.cp:72]
        pro_state_next <= S_i10_select;
      when S_i10_select => -- SELECT_CASE19215[com.cp:112]
        case REG_sys_status_RD  is
          when  "001" => pro_state_next <= S_i11_bind_to_13;
          when  "101" => pro_state_next <= S_i14_bind_to_16;
          when  "010" => pro_state_next <= S_i17_branch;
          when  "011" => pro_state_next <= S_i25_branch;
          when  "100" => pro_state_next <= S_i33_branch;
          when  others => pro_state_next <= S_i41_assign;
        end case;
      when S_i11_bind_to_13 => -- ASSIGN14545[com.cp:79]
        pro_state_next <= S_i41_assign;
      when S_i14_bind_to_16 => -- ASSIGN8441[com.cp:84]
        pro_state_next <= S_i41_assign;
      when S_i17_branch => -- BRANCH25871[com.cp:88]
        if (onl = '0') and (counter = CONST_I6_0) then
          pro_state_next <= S_i18_bind_to_20;
        else
          pro_state_next <= S_i21_branch;
        end if;
      when S_i18_bind_to_20 => -- ASSIGN38972[com.cp:91]
        pro_state_next <= S_i41_assign;
      when S_i21_branch => -- BRANCH58310[com.cp:93]
        if (onl = '1') and (counter = CONST_I6_0) then
          pro_state_next <= S_i22_bind_to_23;
        else
          pro_state_next <= S_i24_assign;
        end if;
      when S_i22_bind_to_23 => -- ASSIGN77977[com.cp:95]
        pro_state_next <= S_i41_assign;
      when S_i24_assign => -- ASSIGN87455[com.cp:97]
        pro_state_next <= S_i41_assign;
      when S_i25_branch => -- BRANCH13567[com.cp:101]
        if (onl = '0') and (counter = CONST_I6_0) then
          pro_state_next <= S_i26_bind_to_27;
        else
          pro_state_next <= S_i29_branch;
        end if;
      when S_i26_bind_to_27 => -- ASSIGN67142[com.cp:103]
        pro_state_next <= S_i28_assign;
      when S_i28_assign => -- ASSIGN14484[com.cp:104]
        pro_state_next <= S_i41_assign;
      when S_i29_branch => -- BRANCH17121[com.cp:106]
        if (onl = '1') and (counter = CONST_I6_0) then
          pro_state_next <= S_i30_bind_to_31;
        else
          pro_state_next <= S_i32_assign;
        end if;
      when S_i30_bind_to_31 => -- ASSIGN83041[com.cp:108]
        pro_state_next <= S_i41_assign;
      when S_i32_assign => -- ASSIGN95086[com.cp:110]
        pro_state_next <= S_i41_assign;
      when S_i33_branch => -- BRANCH24577[com.cp:114]
        if counter = CONST_I6_0 then
          pro_state_next <= S_i34_bind_to_35;
        else
          pro_state_next <= S_i36_branch;
        end if;
      when S_i34_bind_to_35 => -- ASSIGN83891[com.cp:116]
        pro_state_next <= S_i41_assign;
      when S_i36_branch => -- BRANCH78627[com.cp:118]
        if counter = CONST_I6_1 then
          pro_state_next <= S_i37_assign;
        else
          pro_state_next <= S_i39_assign;
        end if;
      when S_i37_assign => -- ASSIGN22215[com.cp:120]
        pro_state_next <= S_i38_assign;
      when S_i38_assign => -- ASSIGN10492[com.cp:121]
        if REG_sys_status_GD = '1' then
          pro_state_next <= S_i38_assign;
        else
          pro_state_next <= S_i41_assign;
        end if;
      when S_i39_assign => -- ASSIGN7089[com.cp:125]
        pro_state_next <= S_i40_assign;
      when S_i40_assign => -- ASSIGN2398[com.cp:126]
        pro_state_next <= S_i41_assign;
      when S_i41_assign => -- ASSIGN45421[com.cp:130]
        if REG_sys_status_next_GD = '1' then
          pro_state_next <= S_i41_assign;
        else
          pro_state_next <= S_i42_branch;
        end if;
      when S_i42_branch => -- BRANCH75600[com.cp:131]
        if onl = '1' then
          pro_state_next <= S_i43_assign;
        else
          pro_state_next <= S_i44_assign;
        end if;
      when S_i43_assign => -- ASSIGN86320[com.cp:131]
        pro_state_next <= S_i45_fun;
      when S_i44_assign => -- ASSIGN28093[com.cp:131]
        pro_state_next <= S_i45_fun;
      when S_i45_fun => -- FUN24852[com.cp:132]
        if not((TIMER_watch_timer_GD) = ('0')) then
          pro_state_next <= S_i45_fun;
        else
          pro_state_next <= S_i9_assign;
        end if;
      when S_sys_status_proc_end => -- PROCESS0[:0]
        pro_state_next <= S_sys_status_proc_end;
        PRO_sys_status_proc_END <= '1';
    end case;
  end process control_path;
  
  -- Instruction Datapath Combinational Unit
  data_path: process(
          last_status,
          pro_state
          )
  begin
    -- Default values
    REG_stat_led_WR <= '0';
    REG_stat_led_WE <= '0';
    TIMER_watch_timer_INIT <= '0';
    TIMER_watch_timer_START <= '0';
    REG_sys_status_next_WR <= "000";
    REG_sys_status_next_WE <= '0';
    REG_sys_status_WR <= "000";
    REG_sys_status_WE <= '0';
    TIMER_watch_timer_AWAIT <= '0';
    case pro_state is
      when S_sys_status_proc_start => -- PROCESS0[:0]
        null;
      when S_i1_assign => -- ASSIGN23890[com.cp:59]
        REG_stat_led_WR <= '0';
        REG_stat_led_WE <= '1';
      when S_i2_bind_to_3 => -- ASSIGN71138[com.cp:61]
        null;
      when S_i4_fun => -- FUN77851[com.cp:64]
        TIMER_watch_timer_INIT <= TIMER_watch_timer_GD;
      when S_i5_fun => -- FUN56314[com.cp:65]
        TIMER_watch_timer_START <= TIMER_watch_timer_GD;
      when S_i6_assign => -- ASSIGN37171[com.cp:67]
        null;
      when S_i7_assign => -- ASSIGN15578[com.cp:68]
        REG_sys_status_next_WR <= last_status;
        REG_sys_status_next_WE <= '1';
      when S_i9_assign => -- ASSIGN57915[com.cp:72]
        null;
      when S_i10_select => -- SELECT_CASE19215[com.cp:112]
        null;
      when S_i11_bind_to_13 => -- ASSIGN14545[com.cp:79]
        null;
      when S_i14_bind_to_16 => -- ASSIGN8441[com.cp:84]
        null;
      when S_i17_branch => -- BRANCH25871[com.cp:88]
        null;
      when S_i18_bind_to_20 => -- ASSIGN38972[com.cp:91]
        null;
      when S_i21_branch => -- BRANCH58310[com.cp:93]
        null;
      when S_i22_bind_to_23 => -- ASSIGN77977[com.cp:95]
        null;
      when S_i24_assign => -- ASSIGN87455[com.cp:97]
        null;
      when S_i25_branch => -- BRANCH13567[com.cp:101]
        null;
      when S_i26_bind_to_27 => -- ASSIGN67142[com.cp:103]
        null;
      when S_i28_assign => -- ASSIGN14484[com.cp:104]
        null;
      when S_i29_branch => -- BRANCH17121[com.cp:106]
        null;
      when S_i30_bind_to_31 => -- ASSIGN83041[com.cp:108]
        null;
      when S_i32_assign => -- ASSIGN95086[com.cp:110]
        null;
      when S_i33_branch => -- BRANCH24577[com.cp:114]
        null;
      when S_i34_bind_to_35 => -- ASSIGN83891[com.cp:116]
        null;
      when S_i36_branch => -- BRANCH78627[com.cp:118]
        null;
      when S_i37_assign => -- ASSIGN22215[com.cp:120]
        null;
      when S_i38_assign => -- ASSIGN10492[com.cp:121]
        REG_sys_status_WR <= last_status;
        REG_sys_status_WE <= '1';
      when S_i39_assign => -- ASSIGN7089[com.cp:125]
        null;
      when S_i40_assign => -- ASSIGN2398[com.cp:126]
        null;
      when S_i41_assign => -- ASSIGN45421[com.cp:130]
        REG_sys_status_next_WR <= last_status;
        REG_sys_status_next_WE <= '1';
      when S_i42_branch => -- BRANCH75600[com.cp:131]
        null;
      when S_i43_assign => -- ASSIGN86320[com.cp:131]
        REG_stat_led_WR <= '1';
        REG_stat_led_WE <= '1';
      when S_i44_assign => -- ASSIGN28093[com.cp:131]
        REG_stat_led_WR <= '0';
        REG_stat_led_WE <= '1';
      when S_i45_fun => -- FUN24852[com.cp:132]
        TIMER_watch_timer_AWAIT <= TIMER_watch_timer_GD;
      when S_sys_status_proc_end => -- PROCESS0[:0]
        null;
    end case;
  end process data_path;
  
  -- Instruction Datapath Transitional Unit
  data_trans: process(
          REG_sys_status_next_RD,
          counter,
          onl,
          conpro_system_clk,
          conpro_system_reset,
          pro_state
          )
  begin
    if conpro_system_clk'event and conpro_system_clk='1' then
      if conpro_system_reset = '0' then
        onl <= '0';
        counter <= conv_signed(0,6);
        last_status <= "000";
      else
        case pro_state is
          when S_sys_status_proc_start => -- PROCESS0[:0]
            null;
          when S_i1_assign => -- ASSIGN23890[com.cp:59]
            null;
          when S_i2_bind_to_3 => -- ASSIGN71138[com.cp:61]
            onl <= '0';
            counter <= CONST_I6_0;
          when S_i4_fun => -- FUN77851[com.cp:64]
            null;
          when S_i5_fun => -- FUN56314[com.cp:65]
            null;
          when S_i6_assign => -- ASSIGN37171[com.cp:67]
            last_status <= "101";
          when S_i7_assign => -- ASSIGN15578[com.cp:68]
            null;
          when S_i9_assign => -- ASSIGN57915[com.cp:72]
            last_status <= REG_sys_status_next_RD;
          when S_i10_select => -- SELECT_CASE19215[com.cp:112]
            null;
          when S_i11_bind_to_13 => -- ASSIGN14545[com.cp:79]
            last_status <= "001";
            counter <= CONST_I6_0;
            onl <= '1';
          when S_i14_bind_to_16 => -- ASSIGN8441[com.cp:84]
            last_status <= "101";
            counter <= CONST_I6_0;
            onl <= '0';
          when S_i17_branch => -- BRANCH25871[com.cp:88]
            null;
          when S_i18_bind_to_20 => -- ASSIGN38972[com.cp:91]
            last_status <= "010";
            counter <= CONST_I6_2;
            onl <= '1';
          when S_i21_branch => -- BRANCH58310[com.cp:93]
            null;
          when S_i22_bind_to_23 => -- ASSIGN77977[com.cp:95]
            counter <= CONST_I6_2;
            onl <= '0';
          when S_i24_assign => -- ASSIGN87455[com.cp:97]
            counter <= counter - CONST_I6_1;
          when S_i25_branch => -- BRANCH13567[com.cp:101]
            null;
          when S_i26_bind_to_27 => -- ASSIGN67142[com.cp:103]
            counter <= CONST_I6_6;
            onl <= '1';
          when S_i28_assign => -- ASSIGN14484[com.cp:104]
            last_status <= "011";
          when S_i29_branch => -- BRANCH17121[com.cp:106]
            null;
          when S_i30_bind_to_31 => -- ASSIGN83041[com.cp:108]
            counter <= CONST_I6_6;
            onl <= '0';
          when S_i32_assign => -- ASSIGN95086[com.cp:110]
            counter <= counter - CONST_I6_1;
          when S_i33_branch => -- BRANCH24577[com.cp:114]
            null;
          when S_i34_bind_to_35 => -- ASSIGN83891[com.cp:116]
            counter <= CONST_I6_3;
            onl <= '1';
          when S_i36_branch => -- BRANCH78627[com.cp:118]
            null;
          when S_i37_assign => -- ASSIGN22215[com.cp:120]
            counter <= CONST_I6_0;
          when S_i38_assign => -- ASSIGN10492[com.cp:121]
            null;
          when S_i39_assign => -- ASSIGN7089[com.cp:125]
            onl <= not(onl);
          when S_i40_assign => -- ASSIGN2398[com.cp:126]
            counter <= counter - CONST_I6_1;
          when S_i41_assign => -- ASSIGN45421[com.cp:130]
            null;
          when S_i42_branch => -- BRANCH75600[com.cp:131]
            null;
          when S_i43_assign => -- ASSIGN86320[com.cp:131]
            null;
          when S_i44_assign => -- ASSIGN28093[com.cp:131]
            null;
          when S_i45_fun => -- FUN24852[com.cp:132]
            null;
          when S_sys_status_proc_end => -- PROCESS0[:0]
            null;
        end case;
      end if;
    end if;
  end process data_trans;
  
  -- Object implementation
  
  -- Toplevel assignments
  -- Monitors
end main;
