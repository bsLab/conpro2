\relax 
\ifx\hyper@anchor\@undefined
\global \let \oldcontentsline\contentsline
\gdef \contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global \let \oldnewlabel\newlabel
\gdef \newlabel#1#2{\newlabelxx{#1}#2}
\gdef \newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\let \contentsline\oldcontentsline
\let \newlabel\oldnewlabel}
\else
\global \let \hyper@last\relax 
\fi

\select@language{english}
\@writefile{toc}{\select@language{english}}
\@writefile{lof}{\select@language{english}}
\@writefile{lot}{\select@language{english}}
\@input{conpro2_toc.aux}
\newlabel{toclabelI}{{}{5}{\relax }{}{}}
\@writefile{toc}{\contentsline {section}{Introduction and Overview}{5}{section*.1}}
\newlabel{toclabelII}{{}{6}{\relax }{section*.1}{}}
\@writefile{toc}{\contentsline {section}{Higher-Level-Synthesis}{6}{section*.2}}
\newlabel{toclabelIII}{{}{6}{\relax }{section*.2}{}}
\@writefile{toc}{\contentsline {subsection}{Multi-Process-Architecture}{6}{section*.3}}
\newlabel{toclabelIV}{{}{6}{\relax }{section*.3}{}}
\@writefile{toc}{\contentsline {subsection}{Scheduling \& Allocation}{6}{section*.4}}
\newlabel{toclabelV}{{}{6}{\relax }{section*.4}{}}
\@writefile{toc}{\contentsline {subsection}{Rule Based Scheduling}{6}{section*.5}}
\newlabel{toclabelVI}{{}{7}{\relax }{section*.5}{}}
\@writefile{toc}{\contentsline {section}{Language Specification}{7}{section*.6}}
\newlabel{toclabelVII}{{}{7}{\relax }{section*.6}{}}
\@writefile{toc}{\contentsline {subsection}{Introduction}{7}{section*.7}}
\newlabel{toclabelVIII}{{}{7}{\relax }{section*.7}{}}
\@writefile{toc}{\contentsline {subsection}{Modules and Processes}{7}{section*.8}}
\newlabel{toclabelIX}{{}{7}{\relax }{section*.8}{}}
\@writefile{toc}{\contentsline {subsubsection}{Behavioural Modules}{7}{section*.9}}
\@writefile{lot}{\contentsline {definition}{\numberline {1}{\ignorespaces \bf  Formal syntax specification of a behavioural module. }}{8}{definition.1}}
\newlabel{def:1}{{1}{8}{\relax }{definition.1}{}}
\newlabel{toclabelX}{{}{8}{\relax }{definition.1}{}}
\@writefile{toc}{\contentsline {subsubsection}{Abstract Object Modules}{8}{section*.10}}
\newlabel{toclabelXI}{{}{8}{\relax }{section*.10}{}}
\@writefile{toc}{\contentsline {subsubsection}{Structural Modules}{8}{section*.11}}
\@writefile{lot}{\contentsline {definition}{\numberline {2}{\ignorespaces \bf  Formal syntax specification of a structural module. }}{9}{definition.2}}
\newlabel{def:2}{{2}{9}{\relax }{definition.2}{}}
\@writefile{lot}{\contentsline {table}{\numberline {1}{\ignorespaces Summary of module-s definition and interconnect. }}{9}{table.1}}
\newlabel{table:1}{{1}{9}{\relax }{table.1}{}}
\@writefile{lot}{\contentsline {example}{\numberline {1}{\ignorespaces \bf  Example of combined behavioural and structural module definitions. A SoC is composed of two components Lc1 and Lc2, instantiated from behavioural module Link\_simu, the actual toplevel module (source file link\_simu.cp). }}{10}{example.1}}
\newlabel{example:1}{{1}{10}{\relax }{example.1}{}}
\@writefile{lot}{\contentsline {definition}{\numberline {3}{\ignorespaces \bf  Formal syntax specification of a process definition. }}{12}{definition.3}}
\newlabel{def:3}{{3}{12}{\relax }{definition.3}{}}
\newlabel{toclabelXII}{{}{12}{\relax }{example.1}{}}
\@writefile{toc}{\contentsline {subsubsection}{Processes}{12}{section*.12}}
\@writefile{lot}{\contentsline {example}{\numberline {2}{\ignorespaces \bf  An example showing process definitions and process arrays. }}{12}{example.2}}
\newlabel{example:2}{{2}{12}{\relax }{example.2}{}}
\@writefile{lot}{\contentsline {definition}{\numberline {4}{\ignorespaces \bf  Formal syntax specification of a process array definition. }}{13}{definition.4}}
\newlabel{def:4}{{4}{13}{\relax }{definition.4}{}}
\@writefile{lot}{\contentsline {table}{\numberline {2}{\ignorespaces Summary of process definitions and access. }}{13}{table.2}}
\newlabel{table:2}{{2}{13}{\relax }{table.2}{}}
\@writefile{lot}{\contentsline {table}{\numberline {3}{\ignorespaces Summary of process management. }}{13}{table.3}}
\newlabel{table:3}{{3}{13}{\relax }{table.3}{}}
\newlabel{toclabelXIII}{{}{15}{\relax }{example.2}{}}
\@writefile{toc}{\contentsline {subsection}{Block Structures}{15}{section*.13}}
\@writefile{lot}{\contentsline {definition}{\numberline {5}{\ignorespaces \bf  Formal syntax specification of a block definition. }}{16}{definition.5}}
\newlabel{def:5}{{5}{16}{\relax }{definition.5}{}}
\newlabel{toclabelXIV}{{}{16}{\relax }{table.5}{}}
\@writefile{toc}{\contentsline {subsection}{Data Objects and Data Types}{16}{section*.14}}
\@writefile{lot}{\contentsline {table}{\numberline {4}{\ignorespaces Summary of block definitions. }}{16}{table.4}}
\newlabel{table:4}{{4}{16}{\relax }{table.4}{}}
\@writefile{lot}{\contentsline {table}{\numberline {5}{\ignorespaces Summary of block parameters. Highlighted values are default settings of each parameter. }}{17}{table.5}}
\newlabel{table:5}{{5}{17}{\relax }{table.5}{}}
\newlabel{toclabelXV}{{}{17}{\relax }{table.7}{}}
\@writefile{toc}{\contentsline {subsubsection}{Shared Objects and Scheduler}{17}{section*.15}}
\@writefile{lot}{\contentsline {definition}{\numberline {6}{\ignorespaces \bf  Formal syntax specification of a data object definition. }}{18}{definition.6}}
\newlabel{def:6}{{6}{18}{\relax }{definition.6}{}}
\@writefile{lot}{\contentsline {table}{\numberline {6}{\ignorespaces Summary of provided set of data (core) objects $\Re $, TYPE $\alpha $. }}{18}{table.6}}
\newlabel{table:6}{{6}{18}{\relax }{table.6}{}}
\@writefile{lot}{\contentsline {table}{\numberline {7}{\ignorespaces Summary of provided set of data (core) types, TYPE $\beta $. }}{19}{table.7}}
\newlabel{table:7}{{7}{19}{\relax }{table.7}{}}
\@writefile{lot}{\contentsline {graph}{\numberline {1}{\ignorespaces Scheduler Block Architecture }}{20}{graph.1}}
\newlabel{graph:1}{{1}{20}{\relax }{graph.1}{}}
\@writefile{lot}{\contentsline {algorithm}{\numberline {1}{\ignorespaces \bf  Static Priority Scheduler: From/to process i:\{REQ-i,GD-i\}, from/to shared resource block:\{ACT,ACK\}. A process-i request activates REQ-i, and if the resource is not locked, the request is granted to the next process in the if-then-else cascade. If the request is finished, then ACK is activated and releases the locked object and releases GD-i for this respective process indicating that the request is finished. }}{20}{algorithm.1}}
\newlabel{algorithm:1}{{1}{20}{\relax }{algorithm.1}{}}
\newlabel{toclabelXVI}{{}{20}{\relax }{algorithm.2}{}}
\@writefile{toc}{\contentsline {subsubsection}{Registers}{20}{section*.16}}
\@writefile{lot}{\contentsline {algorithm}{\numberline {2}{\ignorespaces \bf  Dynamic Queue Scheduler: From/to process i:\{REQ-i,GD-i\}, from/to shared resource block:\{ACT,ACK\}. A process-i request activates REQ-i, and if the resource queue is empty or this process is at head of the queue, the request is granted to the process in the if-then-else cascade. If the request is finished, then ACK is activated and removes the process from the resource queue and releases GD-i for this respective process indicating that the request is finished. }}{21}{algorithm.2}}
\newlabel{algorithm:2}{{2}{21}{\relax }{algorithm.2}{}}
\@writefile{lot}{\contentsline {table}{\numberline {8}{\ignorespaces Summary of register definitions and access in expressions. }}{22}{table.8}}
\newlabel{table:8}{{8}{22}{\relax }{table.8}{}}
\@writefile{lot}{\contentsline {example}{\numberline {3}{\ignorespaces \bf  Example of global and local register definitions and register access. }}{22}{example.3}}
\newlabel{example:3}{{3}{22}{\relax }{example.3}{}}
\newlabel{toclabelXVII}{{}{22}{\relax }{example.3}{}}
\@writefile{toc}{\contentsline {subsubsection}{Variables}{22}{section*.17}}
\@writefile{lot}{\contentsline {table}{\numberline {9}{\ignorespaces Summary of variable definitions and access in expressions. }}{23}{table.9}}
\newlabel{table:9}{{9}{23}{\relax }{table.9}{}}
\@writefile{lot}{\contentsline {example}{\numberline {4}{\ignorespaces \bf  Example of variable definitions and variable access. }}{23}{example.4}}
\newlabel{example:4}{{4}{23}{\relax }{example.4}{}}
\newlabel{toclabelXVIII}{{}{24}{\relax }{example.4}{}}
\@writefile{toc}{\contentsline {subsubsection}{Signals}{24}{section*.18}}
\@writefile{lot}{\contentsline {example}{\numberline {5}{\ignorespaces \bf  Example of signal definitions and signal access. Component structure elements are signals, too. }}{24}{example.5}}
\newlabel{example:5}{{5}{24}{\relax }{example.5}{}}
\@writefile{lot}{\contentsline {definition}{\numberline {7}{\ignorespaces \bf  Formal syntax specification of single and bounded assignments, executed concurrently. }}{25}{definition.7}}
\newlabel{def:7}{{7}{25}{\relax }{definition.7}{}}
\newlabel{toclabelXIX}{{}{25}{\relax }{example.5}{}}
\@writefile{toc}{\contentsline {subsection}{Expressions and Assignments}{25}{section*.19}}
\@writefile{lot}{\contentsline {table}{\numberline {10}{\ignorespaces Summary of available arithmetic operators. Supported data type set: \{logic{[}N{]},int{[}N{]},char\} }}{26}{table.10}}
\newlabel{table:10}{{10}{26}{\relax }{table.10}{}}
\@writefile{lot}{\contentsline {table}{\numberline {11}{\ignorespaces Summary of available logic operators. Supported data type set: \{logic{[}N{]},int{[}N{]},char\} }}{26}{table.11}}
\newlabel{table:11}{{11}{26}{\relax }{table.11}{}}
\@writefile{lot}{\contentsline {table}{\numberline {12}{\ignorespaces Summary of available boolean operators. Supported data type: bool }}{26}{table.12}}
\newlabel{table:12}{{12}{26}{\relax }{table.12}{}}
\@writefile{lot}{\contentsline {table}{\numberline {13}{\ignorespaces Summary of available relational operators. Supported data type: \{logic{[}N{]},int{[}N{]},char\} }}{27}{table.13}}
\newlabel{table:13}{{13}{27}{\relax }{table.13}{}}
\newlabel{toclabelXX}{{}{27}{\relax }{table.13}{}}
\@writefile{toc}{\contentsline {subsection}{Types}{27}{section*.20}}
\newlabel{toclabelXXI}{{}{27}{\relax }{section*.20}{}}
\@writefile{toc}{\contentsline {subsubsection}{Data Object Types}{27}{section*.21}}
\@writefile{lot}{\contentsline {table}{\numberline {14}{\ignorespaces Summary of available Data Object Types. }}{27}{table.14}}
\newlabel{table:14}{{14}{27}{\relax }{table.14}{}}
\newlabel{toclabelXXII}{{}{27}{\relax }{table.14}{}}
\@writefile{toc}{\contentsline {subsubsection}{Data Types}{27}{section*.22}}
\@writefile{lot}{\contentsline {table}{\numberline {15}{\ignorespaces Summary of available Data Types. }}{28}{table.15}}
\newlabel{table:15}{{15}{28}{\relax }{table.15}{}}
\newlabel{toclabelXXIII}{{}{28}{\relax }{table.15}{}}
\@writefile{toc}{\contentsline {subsubsection}{Abstract Data Object Types}{28}{section*.23}}
\@writefile{lot}{\contentsline {table}{\numberline {16}{\ignorespaces Available Abstract Data Objects Types. }}{28}{table.16}}
\newlabel{table:16}{{16}{28}{\relax }{table.16}{}}
\newlabel{toclabelXXIV}{{}{28}{\relax }{table.16}{}}
\@writefile{toc}{\contentsline {subsubsection}{Product Types: Array}{28}{section*.24}}
\newlabel{toclabelXXV}{{}{28}{\relax }{table.17}{}}
\@writefile{toc}{\contentsline {subsubsection}{Product Types: Structure}{28}{section*.25}}
\@writefile{lot}{\contentsline {table}{\numberline {17}{\ignorespaces Summary of array definitions. }}{29}{table.17}}
\newlabel{table:17}{{17}{29}{\relax }{table.17}{}}
\@writefile{lot}{\contentsline {table}{\numberline {18}{\ignorespaces Summary of structure type definition, data object definitions and structure access. }}{30}{table.18}}
\newlabel{table:18}{{18}{30}{\relax }{table.18}{}}
\@writefile{lot}{\contentsline {definition}{\numberline {8}{\ignorespaces \bf  Formal syntax definition for structure type definition, object definition and structure object access. }}{31}{definition.8}}
\newlabel{def:8}{{8}{31}{\relax }{definition.8}{}}
\@writefile{lot}{\contentsline {example}{\numberline {6}{\ignorespaces \bf  Structures with register, variable and component object type. }}{32}{example.6}}
\newlabel{example:6}{{6}{32}{\relax }{example.6}{}}
\@writefile{lot}{\contentsline {table}{\numberline {19}{\ignorespaces Summary of array definitions. }}{33}{table.19}}
\newlabel{table:19}{{19}{33}{\relax }{table.19}{}}
\newlabel{toclabelXXVI}{{}{33}{\relax }{example.6}{}}
\@writefile{toc}{\contentsline {subsubsection}{Sum Types: Enumeration}{33}{section*.26}}
\newlabel{toclabelXXVII}{{}{33}{\relax }{section*.26}{}}
\@writefile{toc}{\contentsline {subsubsection}{Exceptions}{33}{section*.27}}
\newlabel{toclabelXXVIII}{{}{33}{\relax }{table.19}{}}
\@writefile{toc}{\contentsline {subsection}{Control Statements}{33}{section*.28}}
\newlabel{toclabelXXIX}{{}{33}{\relax }{section*.28}{}}
\@writefile{toc}{\contentsline {subsubsection}{Counting for-Loop}{33}{section*.29}}
\newlabel{toclabelXXX}{{}{34}{\relax }{section*.29}{}}
\@writefile{toc}{\contentsline {subsubsection}{Conditional while-Loop}{34}{section*.30}}
\newlabel{toclabelXXXI}{{}{34}{\relax }{section*.30}{}}
\@writefile{toc}{\contentsline {subsubsection}{Endless always-Loop}{34}{section*.31}}
\newlabel{toclabelXXXII}{{}{34}{\relax }{section*.31}{}}
\@writefile{toc}{\contentsline {subsubsection}{Blocking wait-for-Loop}{34}{section*.32}}
\newlabel{toclabelXXXIII}{{}{34}{\relax }{section*.32}{}}
\@writefile{toc}{\contentsline {subsubsection}{Conditional if-else-Branch}{34}{section*.33}}
\newlabel{toclabelXXXIV}{{}{34}{\relax }{section*.33}{}}
\@writefile{toc}{\contentsline {subsubsection}{Multicase match-Branch}{34}{section*.34}}
\newlabel{toclabelXXXV}{{}{34}{\relax }{section*.34}{}}
\@writefile{toc}{\contentsline {subsubsection}{Exception Handler}{34}{section*.35}}
\newlabel{toclabelXXXVI}{{}{34}{\relax }{section*.35}{}}
\@writefile{toc}{\contentsline {subsection}{Functions}{34}{section*.36}}
\@writefile{lot}{\contentsline {definition}{\numberline {9}{\ignorespaces \bf  Formal syntax specification of a function definition. }}{35}{definition.9}}
\newlabel{def:9}{{9}{35}{\relax }{definition.9}{}}
\@writefile{lot}{\contentsline {table}{\numberline {20}{\ignorespaces Summary of function definitions and application (call). }}{36}{table.20}}
\newlabel{table:20}{{20}{36}{\relax }{table.20}{}}
\@writefile{lot}{\contentsline {example}{\numberline {7}{\ignorespaces \bf  An example showing function definitions and function application. The first function returns one result value, the second a tuple of two values, assigned a tuple of storage objects (of same type) in line 42. }}{36}{example.7}}
\newlabel{example:7}{{7}{36}{\relax }{example.7}{}}
\newlabel{toclabelXXXVII}{{}{37}{\relax }{example.7}{}}
\@writefile{toc}{\contentsline {subsection}{I/O: Hardware Port Interface}{37}{section*.37}}
\newlabel{toclabelXXXVIII}{{}{37}{\relax }{section*.37}{}}
\@writefile{toc}{\contentsline {subsubsection}{Components: Interfacing HDL}{37}{section*.38}}
\newlabel{toclabelXXXIX}{{}{37}{\relax }{section*.38}{}}
\@writefile{toc}{\contentsline {subsubsection}{External Module Interface: Embedding HDL}{37}{section*.39}}
\newlabel{toclabelXL}{{}{38}{\relax }{section*.39}{}}
\@writefile{toc}{\contentsline {section}{Abstract Data Type Objects}{38}{section*.40}}
\@writefile{lot}{\contentsline {definition}{\numberline {10}{\ignorespaces \bf  Opening of a module. }}{38}{definition.10}}
\newlabel{def:10}{{10}{38}{\relax }{definition.10}{}}
\@writefile{lot}{\contentsline {definition}{\numberline {11}{\ignorespaces \bf  Object method calls. The object must be first created with the object defintion statement. }}{38}{definition.11}}
\newlabel{def:11}{{11}{38}{\relax }{definition.11}{}}
\@writefile{lot}{\contentsline {table}{\numberline {21}{\ignorespaces Summary of abstract object module inclusion, definition and access. }}{38}{table.21}}
\newlabel{table:21}{{21}{38}{\relax }{table.21}{}}
\newlabel{toclabelXLI}{{}{38}{\relax }{table.21}{}}
\@writefile{toc}{\contentsline {subsection}{Pseudo-Notation}{39}{section*.41}}
\@writefile{lot}{\contentsline {definition}{\numberline {12}{\ignorespaces \bf  Pseudo notation for abstract modules: signature and interface declarations, and implementation defintion. }}{39}{definition.12}}
\newlabel{def:12}{{12}{39}{\relax }{definition.12}{}}
\@writefile{lot}{\contentsline {definition}{\numberline {13}{\ignorespaces \bf  (Cont.) Pseudo notation for abstract modules: type definition. }}{40}{definition.13}}
\newlabel{def:13}{{13}{40}{\relax }{definition.13}{}}
\@writefile{lot}{\contentsline {definition}{\numberline {14}{\ignorespaces \bf  (Cont.) Pseudo notation for abstract modules: method type signature. }}{40}{definition.14}}
\newlabel{def:14}{{14}{40}{\relax }{definition.14}{}}
\@writefile{lot}{\contentsline {definition}{\numberline {15}{\ignorespaces \bf  (Cont.) Pseudo notation for abstract modules: object- and data types. }}{41}{definition.15}}
\newlabel{def:15}{{15}{41}{\relax }{definition.15}{}}
\newlabel{toclabelXLII}{{}{41}{\relax }{table.22}{}}
\@writefile{toc}{\contentsline {subsection}{Interprocess-Communication}{41}{section*.42}}
\@writefile{lot}{\contentsline {table}{\numberline {22}{\ignorespaces Summary of symbols used in pseudo notation. }}{42}{table.22}}
\newlabel{table:22}{{22}{42}{\relax }{table.22}{}}
\newlabel{toclabelXLIII}{{}{43}{\relax }{Item.7}{}}
\@writefile{toc}{\contentsline {subsubsection}{Mutex}{43}{section*.43}}
\@writefile{lot}{\contentsline {definition}{\numberline {16}{\ignorespaces \bf  Signature of ADTO Module Mutex. }}{44}{definition.16}}
\newlabel{def:16}{{16}{44}{\relax }{definition.16}{}}
\@writefile{lot}{\contentsline {definition}{\numberline {17}{\ignorespaces \bf  Implementation of ADTO Module Mutex. }}{44}{definition.17}}
\newlabel{def:17}{{17}{44}{\relax }{definition.17}{}}
\@writefile{lot}{\contentsline {definition}{\numberline {18}{\ignorespaces \bf  Interface of ADTO Module Mutex. }}{44}{definition.18}}
\newlabel{def:18}{{18}{44}{\relax }{definition.18}{}}
\@writefile{lot}{\contentsline {example}{\numberline {8}{\ignorespaces \bf  A mutex lock is used to protect the access of two global registers x and y. }}{45}{example.8}}
\newlabel{example:8}{{8}{45}{\relax }{example.8}{}}
\newlabel{toclabelXLIV}{{}{46}{\relax }{example.8}{}}
\@writefile{toc}{\contentsline {subsubsection}{Semaphore}{46}{section*.44}}
\@writefile{lot}{\contentsline {definition}{\numberline {19}{\ignorespaces \bf  Signature of ADTO Module Semaphore. }}{46}{definition.19}}
\newlabel{def:19}{{19}{46}{\relax }{definition.19}{}}
\@writefile{lot}{\contentsline {definition}{\numberline {20}{\ignorespaces \bf  Implementation of ADTO Module Semaphore. }}{47}{definition.20}}
\newlabel{def:20}{{20}{47}{\relax }{definition.20}{}}
\@writefile{lot}{\contentsline {definition}{\numberline {21}{\ignorespaces \bf  Interface of ADTO Module Semaphore. }}{47}{definition.21}}
\newlabel{def:21}{{21}{47}{\relax }{definition.21}{}}
\@writefile{lot}{\contentsline {example}{\numberline {9}{\ignorespaces \bf  Semaphores are used to implement a resource negoatation algorithm: Dining philosophers problem using semaphores. Five philosophers sit around a circular table. Each philosopher spends his life alternately thinking and eating. In the center of the table is a large platter of spaghetti. Each philosopher needs two forks two eat. But there are only five forks for all. One fork is placed between each pair of philosophers, and they agree that each will use only the forks to the immeadiate left and right. {[}Andrews 2000, Multihtreaded, Parallel, and Distributed Programming{]} }}{48}{example.9}}
\newlabel{example:9}{{9}{48}{\relax }{example.9}{}}
\newlabel{toclabelXLV}{{}{49}{\relax }{example.9}{}}
\@writefile{toc}{\contentsline {subsubsection}{Event}{49}{section*.45}}
\@writefile{lot}{\contentsline {definition}{\numberline {22}{\ignorespaces \bf  Signature of ADTO Module Event. }}{50}{definition.22}}
\newlabel{def:22}{{22}{50}{\relax }{definition.22}{}}
\@writefile{lot}{\contentsline {definition}{\numberline {23}{\ignorespaces \bf  Implementation of ADTO Module Event. }}{50}{definition.23}}
\newlabel{def:23}{{23}{50}{\relax }{definition.23}{}}
\@writefile{lot}{\contentsline {definition}{\numberline {24}{\ignorespaces \bf  Interface of ADTO Module Event. }}{51}{definition.24}}
\newlabel{def:24}{{24}{51}{\relax }{definition.24}{}}
\@writefile{lot}{\contentsline {example}{\numberline {10}{\ignorespaces \bf  An event synchronize the control flow of several processes. The processes of array p are started sequentially, but they are all suspended untill the event is signaled by the main process. This happens again in each loop iteration. }}{51}{example.10}}
\newlabel{example:10}{{10}{51}{\relax }{example.10}{}}
\newlabel{toclabelXLVI}{{}{52}{\relax }{example.10}{}}
\@writefile{toc}{\contentsline {subsubsection}{Barrier}{52}{section*.46}}
\@writefile{lot}{\contentsline {definition}{\numberline {25}{\ignorespaces \bf  Signature of ADTO Module Barrier. }}{53}{definition.25}}
\newlabel{def:25}{{25}{53}{\relax }{definition.25}{}}
\@writefile{lot}{\contentsline {definition}{\numberline {26}{\ignorespaces \bf  Implementation of ADTO Module Barrier. }}{53}{definition.26}}
\newlabel{def:26}{{26}{53}{\relax }{definition.26}{}}
\@writefile{lot}{\contentsline {definition}{\numberline {27}{\ignorespaces \bf  Interface of ADTO Module Barrier. }}{53}{definition.27}}
\newlabel{def:27}{{27}{53}{\relax }{definition.27}{}}
\@writefile{lot}{\contentsline {example}{\numberline {11}{\ignorespaces \bf  A group of processes defined in array p wait for the barrier b event. The loop iteration of each process starts at the same time. }}{54}{example.11}}
\newlabel{example:11}{{11}{54}{\relax }{example.11}{}}
\newlabel{toclabelXLVII}{{}{54}{\relax }{example.11}{}}
\@writefile{toc}{\contentsline {subsubsection}{Timer}{54}{section*.47}}
\@writefile{lot}{\contentsline {definition}{\numberline {28}{\ignorespaces \bf  Signature of ADTO Module Timer. }}{55}{definition.28}}
\newlabel{def:28}{{28}{55}{\relax }{definition.28}{}}
\@writefile{lot}{\contentsline {definition}{\numberline {29}{\ignorespaces \bf  Implementation of ADTO Module Timer. }}{56}{definition.29}}
\newlabel{def:29}{{29}{56}{\relax }{definition.29}{}}
\@writefile{lot}{\contentsline {definition}{\numberline {30}{\ignorespaces \bf  Interface of ADTO Module Timer. }}{57}{definition.30}}
\newlabel{def:30}{{30}{57}{\relax }{definition.30}{}}
\@writefile{lot}{\contentsline {example}{\numberline {12}{\ignorespaces \bf  Timer example. }}{57}{example.12}}
\newlabel{example:12}{{12}{57}{\relax }{example.12}{}}
\newlabel{toclabelXLVIII}{{}{58}{\relax }{example.12}{}}
\@writefile{toc}{\contentsline {subsubsection}{Queue}{58}{section*.48}}
\@writefile{lot}{\contentsline {definition}{\numberline {31}{\ignorespaces \bf  Signature of ADTO Module Queue. }}{59}{definition.31}}
\newlabel{def:31}{{31}{59}{\relax }{definition.31}{}}
\@writefile{lot}{\contentsline {definition}{\numberline {32}{\ignorespaces \bf  Implementation of ADTO Module Queue. }}{59}{definition.32}}
\newlabel{def:32}{{32}{59}{\relax }{definition.32}{}}
\@writefile{lot}{\contentsline {definition}{\numberline {33}{\ignorespaces \bf  Interface of ADTO Module Queue. }}{60}{definition.33}}
\newlabel{def:33}{{33}{60}{\relax }{definition.33}{}}
\newlabel{toclabelXLIX}{{}{60}{\relax }{definition.33}{}}
\@writefile{toc}{\contentsline {subsubsection}{Channel}{60}{section*.49}}
\@writefile{lot}{\contentsline {definition}{\numberline {34}{\ignorespaces \bf  Signature of ADTO Module Channel. }}{61}{definition.34}}
\newlabel{def:34}{{34}{61}{\relax }{definition.34}{}}
\@writefile{lot}{\contentsline {definition}{\numberline {35}{\ignorespaces \bf  Implementation of ADTO Module Channel. }}{61}{definition.35}}
\newlabel{def:35}{{35}{61}{\relax }{definition.35}{}}
\@writefile{lot}{\contentsline {definition}{\numberline {36}{\ignorespaces \bf  Interface of ADTO Module Channel. }}{62}{definition.36}}
\newlabel{def:36}{{36}{62}{\relax }{definition.36}{}}
\newlabel{toclabelL}{{}{62}{\relax }{definition.36}{}}
\@writefile{toc}{\contentsline {subsection}{External Communication}{62}{section*.50}}
\newlabel{toclabelLI}{{}{62}{\relax }{section*.50}{}}
\@writefile{toc}{\contentsline {subsubsection}{Link }{62}{section*.51}}
\@writefile{lot}{\contentsline {definition}{\numberline {37}{\ignorespaces \bf  Signature of ADTO Module Link. }}{63}{definition.37}}
\newlabel{def:37}{{37}{63}{\relax }{definition.37}{}}
\@writefile{lot}{\contentsline {definition}{\numberline {38}{\ignorespaces \bf  Implementation of ADTO Module Link. }}{64}{definition.38}}
\newlabel{def:38}{{38}{64}{\relax }{definition.38}{}}
\@writefile{lot}{\contentsline {definition}{\numberline {39}{\ignorespaces \bf  Interface of ADTO Module Link. }}{65}{definition.39}}
\newlabel{def:39}{{39}{65}{\relax }{definition.39}{}}
\@writefile{lot}{\contentsline {example}{\numberline {13}{\ignorespaces \bf  More complex example of a Link component used by two processes, one reading from the link, and one writing to the link. }}{65}{example.13}}
\newlabel{example:13}{{13}{65}{\relax }{example.13}{}}
\newlabel{toclabelLII}{{}{67}{\relax }{example.13}{}}
\@writefile{toc}{\contentsline {subsection}{Data Processing}{67}{section*.52}}
\newlabel{toclabelLIII}{{}{67}{\relax }{section*.52}{}}
\@writefile{toc}{\contentsline {subsubsection}{Random}{67}{section*.53}}
\newlabel{toclabelLIV}{{}{68}{\relax }{section*.53}{}}
\@writefile{toc}{\contentsline {section}{Hardware and System Architecture}{68}{section*.54}}
\newlabel{toclabelLV}{{}{68}{\relax }{section*.54}{}}
\@writefile{toc}{\contentsline {subsection}{Introduction}{68}{section*.55}}
\newlabel{toclabelLVI}{{}{68}{\relax }{section*.55}{}}
\@writefile{toc}{\contentsline {subsection}{Modules and Processes}{68}{section*.56}}
\newlabel{toclabelLVII}{{}{68}{\relax }{section*.56}{}}
\@writefile{toc}{\contentsline {subsubsection}{Modules}{68}{section*.57}}
\newlabel{toclabelLVIII}{{}{68}{\relax }{section*.57}{}}
\@writefile{toc}{\contentsline {subsubsection}{Processes}{68}{section*.58}}
\newlabel{toclabelLIX}{{}{68}{\relax }{section*.58}{}}
\@writefile{toc}{\contentsline {subsection}{Block Strcutures}{68}{section*.59}}
\newlabel{toclabelLX}{{}{68}{\relax }{section*.59}{}}
\@writefile{toc}{\contentsline {subsection}{Data Objects and Data Types}{68}{section*.60}}
\newlabel{toclabelLXI}{{}{68}{\relax }{section*.60}{}}
\@writefile{toc}{\contentsline {subsubsection}{Registers}{68}{section*.61}}
\newlabel{toclabelLXII}{{}{68}{\relax }{section*.61}{}}
\@writefile{toc}{\contentsline {subsubsection}{Variables}{68}{section*.62}}
\newlabel{toclabelLXIII}{{}{68}{\relax }{section*.62}{}}
\@writefile{toc}{\contentsline {subsubsection}{Signals}{68}{section*.63}}
\newlabel{toclabelLXIV}{{}{68}{\relax }{section*.63}{}}
\@writefile{toc}{\contentsline {subsubsection}{Expressions and Assignments}{68}{section*.64}}
\newlabel{toclabelLXV}{{}{68}{\relax }{section*.64}{}}
\@writefile{toc}{\contentsline {subsection}{Interprocess-Communication}{68}{section*.65}}
\newlabel{toclabelLXVI}{{}{68}{\relax }{section*.65}{}}
\@writefile{toc}{\contentsline {subsubsection}{Mutex}{68}{section*.66}}
\@writefile{lot}{\contentsline {algorithm}{\numberline {3}{\ignorespaces \bf  The static priority mutex access scheduler with embedded mutex implementation. }}{68}{algorithm.3}}
\newlabel{algorithm:3}{{3}{68}{\relax }{algorithm.3}{}}
\newlabel{toclabelLXVII}{{}{70}{\relax }{algorithm.3}{}}
\@writefile{toc}{\contentsline {subsubsection}{Semaphore}{70}{section*.67}}
\newlabel{toclabelLXVIII}{{}{70}{\relax }{section*.67}{}}
\@writefile{toc}{\contentsline {subsubsection}{Event}{70}{section*.68}}
\newlabel{toclabelLXIX}{{}{70}{\relax }{section*.68}{}}
\@writefile{toc}{\contentsline {subsubsection}{Barrier}{70}{section*.69}}
\newlabel{toclabelLXX}{{}{70}{\relax }{section*.69}{}}
\@writefile{toc}{\contentsline {subsubsection}{Timer}{70}{section*.70}}
\newlabel{toclabelLXXI}{{}{70}{\relax }{section*.70}{}}
\@writefile{toc}{\contentsline {subsubsection}{Queue}{70}{section*.71}}
\newlabel{toclabelLXXII}{{}{70}{\relax }{section*.71}{}}
\@writefile{toc}{\contentsline {subsubsection}{Channel}{70}{section*.72}}
\newlabel{toclabelLXXIII}{{}{70}{\relax }{section*.72}{}}
\@writefile{toc}{\contentsline {subsection}{External Communication}{70}{section*.73}}
\newlabel{toclabelLXXIV}{{}{70}{\relax }{section*.73}{}}
\@writefile{toc}{\contentsline {subsubsection}{Link}{70}{section*.74}}
\newlabel{toclabelLXXV}{{}{70}{\relax }{graph.2}{}}
\@writefile{toc}{\contentsline {subsection}{Types}{70}{section*.75}}
\newlabel{toclabelLXXVI}{{}{70}{\relax }{section*.75}{}}
\@writefile{lot}{\contentsline {graph}{\numberline {2}{\ignorespaces Link Block Interconnect }}{71}{graph.2}}
\newlabel{graph:2}{{2}{71}{\relax }{graph.2}{}}
\@writefile{toc}{\contentsline {subsubsection}{Data Types}{71}{section*.76}}
\newlabel{toclabelLXXVII}{{}{71}{\relax }{section*.76}{}}
\@writefile{toc}{\contentsline {subsubsection}{Abstract Object Types}{71}{section*.77}}
\newlabel{toclabelLXXVIII}{{}{71}{\relax }{section*.77}{}}
\@writefile{toc}{\contentsline {subsubsection}{Product Types: Array}{71}{section*.78}}
\newlabel{toclabelLXXIX}{{}{71}{\relax }{section*.78}{}}
\@writefile{toc}{\contentsline {subsubsection}{Product Types: Structure}{71}{section*.79}}
\newlabel{toclabelLXXX}{{}{71}{\relax }{section*.79}{}}
\@writefile{toc}{\contentsline {subsubsection}{Sum Types: Enumeration}{71}{section*.80}}
\newlabel{toclabelLXXXI}{{}{71}{\relax }{section*.80}{}}
\@writefile{toc}{\contentsline {subsubsection}{Exceptions}{71}{section*.81}}
\newlabel{toclabelLXXXII}{{}{71}{\relax }{section*.81}{}}
\@writefile{toc}{\contentsline {subsection}{Control Statements}{71}{section*.82}}
\newlabel{toclabelLXXXIII}{{}{71}{\relax }{section*.82}{}}
\@writefile{toc}{\contentsline {subsubsection}{Counting for-Loop}{71}{section*.83}}
\newlabel{toclabelLXXXIV}{{}{71}{\relax }{section*.83}{}}
\@writefile{toc}{\contentsline {subsubsection}{Conditional while-Loop}{71}{section*.84}}
\newlabel{toclabelLXXXV}{{}{71}{\relax }{section*.84}{}}
\@writefile{toc}{\contentsline {subsubsection}{Endless always-Loop}{71}{section*.85}}
\newlabel{toclabelLXXXVI}{{}{72}{\relax }{section*.85}{}}
\@writefile{toc}{\contentsline {subsubsection}{Blocking wait-for-Loop}{72}{section*.86}}
\newlabel{toclabelLXXXVII}{{}{72}{\relax }{section*.86}{}}
\@writefile{toc}{\contentsline {subsubsection}{Conditional if-else-Branch}{72}{section*.87}}
\newlabel{toclabelLXXXVIII}{{}{72}{\relax }{section*.87}{}}
\@writefile{toc}{\contentsline {subsubsection}{Multicase match-Branch}{72}{section*.88}}
\newlabel{toclabelLXXXIX}{{}{72}{\relax }{section*.88}{}}
\@writefile{toc}{\contentsline {subsubsection}{Exception Handler}{72}{section*.89}}
\newlabel{toclabelXC}{{}{72}{\relax }{section*.89}{}}
\@writefile{toc}{\contentsline {subsection}{I/O: Hardware Port Interface}{72}{section*.90}}
\newlabel{toclabelXCI}{{}{72}{\relax }{section*.90}{}}
\@writefile{toc}{\contentsline {subsubsection}{Components: Interfacing HDL}{72}{section*.91}}
\newlabel{toclabelXCII}{{}{72}{\relax }{section*.91}{}}
\@writefile{toc}{\contentsline {subsubsection}{External Module Interface: Embedding HDL}{72}{section*.92}}
\newlabel{toclabelXCIII}{{}{73}{\relax }{section*.92}{}}
\@writefile{toc}{\contentsline {section}{External Module Interface EMI}{73}{section*.93}}
\newlabel{toclabelXCIV}{{}{73}{\relax }{Item.11}{}}
\@writefile{toc}{\contentsline {subsection}{Parameter Section}{73}{section*.94}}
\newlabel{toclabelXCV}{{}{74}{\relax }{Item.15}{}}
\@writefile{toc}{\contentsline {subsection}{Methods Section}{74}{section*.95}}
\newlabel{toclabelXCVI}{{}{75}{\relax }{Item.17}{}}
\@writefile{toc}{\contentsline {subsection}{Interface Section}{75}{section*.96}}
\newlabel{toclabelXCVII}{{}{78}{\relax }{section*.96}{}}
\@writefile{toc}{\contentsline {subsection}{Mapping Section}{78}{section*.97}}
\newlabel{toclabelXCVIII}{{}{79}{\relax }{section*.97}{}}
\@writefile{toc}{\contentsline {subsection}{Access Section}{79}{section*.98}}
\newlabel{toclabelXCIX}{{}{83}{\relax }{section*.98}{}}
\@writefile{toc}{\contentsline {subsection}{Signals Section}{83}{section*.99}}
\newlabel{toclabelC}{{}{86}{\relax }{section*.99}{}}
\@writefile{toc}{\contentsline {subsection}{Process Section}{86}{section*.100}}
\newlabel{toclabelCI}{{}{97}{\relax }{section*.100}{}}
\@writefile{toc}{\contentsline {section}{Tool Description Interface TDI}{97}{section*.101}}
\newlabel{toclabelCII}{{}{97}{\relax }{Item.20}{}}
\@writefile{toc}{\contentsline {subsection}{Parameter section }{97}{section*.102}}
\newlabel{toclabelCIII}{{}{100}{\relax }{Item.23}{}}
\@writefile{toc}{\contentsline {subsection}{Function section }{100}{section*.103}}
\newlabel{toclabelCIV}{{}{102}{\relax }{section*.103}{}}
\@writefile{toc}{\contentsline {subsection}{Builtin Core Functions }{102}{section*.104}}
\newlabel{toclabelCV}{{}{105}{\relax }{section*.104}{}}
\@writefile{toc}{\contentsline {section}{$\mu $Code}{105}{section*.105}}
\newlabel{toclabelCVI}{{}{106}{\relax }{section*.105}{}}
\@writefile{toc}{\contentsline {section}{Synthesis}{106}{section*.106}}
\newlabel{toclabelCVII}{{}{106}{\relax }{section*.106}{}}
\@writefile{toc}{\contentsline {subsection}{Basic Scheduling Model}{106}{section*.107}}
\newlabel{toclabelCVIII}{{}{106}{\relax }{section*.107}{}}
\@writefile{toc}{\contentsline {subsection}{Synthesis RulesSynthesis Rules}{106}{section*.108}}
\newlabel{toclabelCIX}{{}{106}{\relax }{section*.108}{}}
\@writefile{toc}{\contentsline {subsection}{Expression Modells and Allocation}{106}{section*.109}}
\newlabel{toclabelCX}{{}{106}{\relax }{section*.109}{}}
\@writefile{toc}{\contentsline {subsection}{$\mu $Code Transformation}{106}{section*.110}}
\newlabel{toclabelCXI}{{}{106}{\relax }{section*.110}{}}
\@writefile{toc}{\contentsline {subsection}{Reference Stack Scheduler}{106}{section*.111}}
\newlabel{toclabelCXII}{{}{106}{\relax }{section*.111}{}}
\@writefile{toc}{\contentsline {subsection}{Basic Block Scheduler}{106}{section*.112}}
\newlabel{toclabelCXIII}{{}{106}{\relax }{section*.112}{}}
\@writefile{toc}{\contentsline {subsection}{Expression Scheduler}{106}{section*.113}}
\newlabel{toclabelAPPI}{{}{107}{\relax }{section*.113}{}}
\@writefile{toc}{\contentsline {section}{Internal Notes}{107}{section*.114}}
\newlabel{toclabelBIB}{{}{108}{\relax }{section*.114}{}}
\@writefile{toc}{\contentsline {section}{Bibliography}{108}{section*.115}}
